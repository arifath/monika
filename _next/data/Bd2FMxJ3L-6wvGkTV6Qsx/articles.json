{"pageProps":{"articles":[{"title":"Using Monika with Mailgun as a notification channel","link":"https://medium.com/hyperjump-tech/using-monika-with-mailgun-as-a-notification-channel-8de92577cfbc?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/8de92577cfbc","category":["javascript","mailgun","open-source","software-development","monika"],"dc:creator":"Denny Pradipta","pubDate":"Tue, 05 Apr 2022 21:41:14 GMT","atom:updated":"2022-04-05T21:41:14.709Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*p9YYfaOEb7a8hi1d.png\" /><figcaption>Mailgun</figcaption></figure><p>One of our priorities right now at Hyperjump is to improve Monika integrations with multiple collaboration tools. We have successfully integrated Monika with <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-telegram-using-telegram-bots-api-f33de6d6646\">Telegram Bots</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Slack</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-microsoft-teams-get-notifications-straight-to-your-channels-using-incoming-3292147d6758\">Microsoft Teams</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-discord-using-discord-server-webhook-bffcd39b7b19\">Discord</a>, and even <a href=\"https://medium.com/hyperjump-tech/get-monika-notifications-to-your-whatsapp-using-monika-whatsapp-notifier-78a83560c04c\">WhatsApp</a> too. In our early development days, we have implemented <a href=\"https://www.mailgun.com/\">Mailgun</a> as a Monika notification channel.</p><p><a href=\"https://www.mailgun.com/\">Mailgun</a> is an all-in-one, intelligent email delivery platform. Using Mailgun, you can send and track your transactional and marketing messages, prevent fake signups, and remove invalid email addresses from your list quickly.</p><p>This article will show you how to integrate Monika with Mailgun so you can receive notifications from Monika straight to your email. Without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FoTYD5RDVBVv4e9nj7e%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FoTYD5RDVBVv4e9nj7e%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FoTYD5RDVBVv4e9nj7e%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"241\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/5848877de01d20490f3e22d275ca8076/href\">https://medium.com/media/5848877de01d20490f3e22d275ca8076/href</a></iframe><h3>Getting the Mailgun API Key</h3><p>To get the Mailgun API Key, you need to create an account first. Head to <a href=\"https://www.mailgun.com\">https://www.mailgun.com</a> and proceed to create an account. After that, log in to your dashboard.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*KqC_cBnu6afYLCyT0cqpbg.png\" /><figcaption>Mailgun Dashboard</figcaption></figure><p>After that, you need to configure your domain. Let’s assume that you are on the free tier. Click <strong>Sending, </strong>and click <strong>Domains</strong>. Then, click the first listed sandbox domain.</p><p>You will be redirected to a page that asks you “How would you like to send your emails from <YOUR_SANDBOX_DOMAIN>?”. On that page, select the API method and you will see your API key. <strong>Copy your API key and your sandbox domain and save it somewhere else</strong>.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uf-1Ai_HGFfBlhshxpfrOg.png\" /><figcaption>Example of the subdomain</figcaption></figure><p>Then, you need to add your email to the Authorized Recipients. On the same page, scroll down to see the Authorized Recipients section. Add your email for testing purposes, and verify your email.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_6VLwNPss3OT1iASWRo-Sg.png\" /><figcaption>Authorized Recipients</figcaption></figure><p>Now that the preparation has been done, it’s time to run Monika with Mailgun notification.</p><h3>Running Monika with Mailgun Notification</h3><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, Telegram, Slack, etc.</p><p>There are three ways to install Monika:</p><ul><li><strong>Install using npm or yarn (Windows/Linux/Mac)</strong><br>If you’re using NPM or Yarn, you can simply run this command in your terminal:</li></ul><pre>npm i -g <a href=\"http://twitter.com/hyperjumptech/monika\">@hyperjumptech/monika</a><br># or<br>yarn global add <a href=\"http://twitter.com/hyperjumptech/monika\">@hyperjumptech/monika</a></pre><ul><li><strong>Install script</strong><br>If you are using Linux, you can simply run this command in your terminal:</li></ul><pre>curl <a href=\"https://raw.githubusercontent.com/hyperjumptech/monika/main/scripts/monika-install.sh\">https://raw.githubusercontent.com/hyperjumptech/monika/main/scripts/monika-install.sh</a> | sh</pre><ul><li><strong>Use Package Managers such as </strong><a href=\"https://community.chocolatey.org/packages/monika\"><strong>Chocolatey</strong></a><strong> or </strong><a href=\"https://snapcraft.io/monika\"><strong>Snapcraft</strong></a>, or</li><li><a href=\"https://github.com/hyperjumptech/monika/releases\"><strong>Download the prebuilt binary from our release page</strong></a><strong>.</strong></li></ul><p>Now that we have the Mailgun API Key, Sandbox Domain, set up the Authorized Recipients, and installed Monika, it’s time to create a configuration called monika.yml:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/3ad2d0ad46adc8d9a82c37d088c11542/href\">https://medium.com/media/3ad2d0ad46adc8d9a82c37d088c11542/href</a></iframe><p>Let me explain a little bit about this configuration:</p><ul><li>You need to set the notification channel in the notifications object. There are 3 properties: id, type, and data. Set the id to any string values, as it is just an identifier. Then, set the type field to mailgun to use the Mailgun notification channel. After that, put your Mailgun API Key, recipients, and domain in the corresponding fields.</li><li>Monika will be probing <a href=\"https://reqres.in/api/users\">https://reqres.in/api/users</a> using the GET<strong> </strong>method every ten seconds and will send you an alert if the response time is longer than two seconds.</li></ul><p>Save the configuration as monika.yml. To run the Monika configuration, go to the directory where you saved the Monika configuration, and run Monika straight away using monika -c monika.yml</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ASIxR-oh22Xsddu_2NI3iA.png\" /><figcaption>It’s working!</figcaption></figure><p>Congratulations! Now that you have successfully integrated Monika with Mailgun, you will be notified if your website is slow or down through your email!</p><h3>Closing</h3><p>Alerting is very important when it comes to monitoring. Using a reliable service like Mailgun to send you emails regarding your website performance is the right thing to do.</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FQoesEe6tCbLyw%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FQoesEe6tCbLyw%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FQoesEe6tCbLyw%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"234\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/c15b58f434ad0e24f98d42f4668fb02d/href\">https://medium.com/media/c15b58f434ad0e24f98d42f4668fb02d/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=8de92577cfbc\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/using-monika-with-mailgun-as-a-notification-channel-8de92577cfbc\">Using Monika with Mailgun as a notification channel</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Monitor your server with Monika using TCP requests","link":"https://medium.com/hyperjump-tech/monitor-your-server-with-monika-using-tcp-requests-ca5b2e561479?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/ca5b2e561479","category":["software-development","tcp","javascript","monika","open-source"],"dc:creator":"Denny Pradipta","pubDate":"Wed, 30 Mar 2022 01:39:26 GMT","atom:updated":"2022-03-30T01:39:26.632Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*hDX9p8ucoG6N80JU\" /><figcaption>Photo by <a href=\"https://unsplash.com/@jordanharrison?utm_source=medium&utm_medium=referral\">Jordan Harrison</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>When we initially developed Monika, we only have one big picture: we do HTTP requests to a server and check if the server is working properly or not. Along the way, we found out that there are more cases that we have to cover, one of which is TCP requests.</p><p>How do TCP and HTTP relate to each other? To put it simply, before a client and a server can exchange an HTTP request/response, both of them must establish a TCP connection first. So, HTTP requests must rely on TCP to work properly.</p><p>In the <a href=\"https://github.com/hyperjumptech/monika/releases/tag/v1.7.0\">newest version of Monika</a>, we have implemented how to probe a URL using TCP instead of HTTP so that we can confirm that the server is working before we send the real request body of our endpoints.</p><p>This article will show you how to monitor your server using TCP requests in the newest version of Monika. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F0BP6TC2sPVnNFxsF96%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F0BP6TC2sPVnNFxsF96%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2F0BP6TC2sPVnNFxsF96%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"435\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/9fa3d9170471f78c04768da65d0a662c/href\">https://medium.com/media/9fa3d9170471f78c04768da65d0a662c/href</a></iframe><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-telegram-using-telegram-bots-api-f33de6d6646\">Telegram</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Slack</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-facebook-workplace-using-custom-integrations-26280a20c906\">Facebook Workplace</a>, etc.</p><p>There are three ways to install Monika:</p><ul><li><strong>Install using npm or yarn (Windows/Linux/Mac)</strong><br>If you’re using NPM or Yarn, you can simply run this command in your terminal:</li></ul><pre>npm i -g <a href=\"http://twitter.com/hyperjumptech/monika\">@hyperjumptech/monika</a><br># or<br>yarn global add <a href=\"http://twitter.com/hyperjumptech/monika\">@hyperjumptech/monika</a></pre><ul><li><strong>Install script</strong><br>If you are using Linux, you can simply run this command in your terminal:</li></ul><pre>curl <a href=\"https://raw.githubusercontent.com/hyperjumptech/monika/main/scripts/monika-install.sh\">https://raw.githubusercontent.com/hyperjumptech/monika/main/scripts/monika-install.sh</a> | sh</pre><ul><li><a href=\"https://github.com/hyperjumptech/monika/releases\"><strong>Download the prebuilt binary from our release page</strong></a><strong>.</strong></li></ul><p>Now that we have our Google Chat Webhook URL and installed Monika, it’s time to create a configuration called monika.yml:</p><ul><li><strong>Use Package Managers such as Chocolatey or Snapcraft</strong></li></ul><p>For the last two weeks, we have been adding Monika to many package managers, such as <a href=\"https://community.chocolatey.org/packages/monika\">Chocolatey</a> and <a href=\"https://snapcraft.io/monika\">Snapcraft</a>. Feel free to install Monika from the package managers mentioned.</p><p>Now that we have installed Monika in our system, it’s time to create the Monika TCP requests configuration:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/17aff428503dd6ca488826bd392e9652/href\">https://medium.com/media/17aff428503dd6ca488826bd392e9652/href</a></iframe><p>Let me explain a little bit about this configuration:</p><ul><li>This configuration uses the Desktop notification</li><li>This configuration uses TCP mode, with the host localhost , port 3000 , and data Hello from Monika</li><li>Because there is no incident or recovery threshold defined, it will use the default value, which is five times.</li></ul><p>If we compare the TCP requests configuration with the usual HTTP requests configuration, you can see the difference lies between the socket key and the requests key.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/3a7a550d65ba206e54649982c7c802e9/href\">https://medium.com/media/3a7a550d65ba206e54649982c7c802e9/href</a></iframe><p>If you define the socket key it means your probe will be using TCP connections, which only uses host , port , and data value. Otherwise, if you define the requests key it means your probe will be using HTTP requests.</p><p>Save the file below as monika.yml and test the configuration by running monika -c monika.yml in your terminal. As an example, I run a simple server in my localhost at port 3000:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*mrixAEpO5g3rtyOMzSdcTA.png\" /><figcaption>It’s working!</figcaption></figure><p>Congratulations! You have successfully monitored your server using Monika with TCP requests!</p><h3>Closing</h3><p>TCP requests can be handy as secondary proof to check if your server is working or not. Sure, we have implemented <a href=\"https://github.com/hyperjumptech/monika/pull/357\">hitting the STUN servers periodically to confirm that the internet is working</a>, but it’s better to be safe than sorry.</p><p>Don’t forget that this feature is only available in the latest version (v.1.7.0). If you haven’t updated your Monika, you cannot use this feature.</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FaVr0FwO0AWFbprJEnb%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FaVr0FwO0AWFbprJEnb%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FaVr0FwO0AWFbprJEnb%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"316\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/664f218b53d62f3880924275b7f4f84a/href\">https://medium.com/media/664f218b53d62f3880924275b7f4f84a/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ca5b2e561479\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/monitor-your-server-with-monika-using-tcp-requests-ca5b2e561479\">Monitor your server with Monika using TCP requests</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Integrate Monika with Facebook Workplace using Custom Integrations","link":"https://medium.com/hyperjump-tech/integrate-monika-with-facebook-workplace-using-custom-integrations-26280a20c906?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/26280a20c906","category":["open-source","facebook-workplace","software-development","monika","javascript"],"dc:creator":"Denny Pradipta","pubDate":"Wed, 23 Mar 2022 01:16:30 GMT","atom:updated":"2022-03-23T01:16:30.588Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*Bv0sSTz0OCifpV9F\" /><figcaption>Source: <a href=\"https://www.facebook.com/groups/workplaceuk/\">https://www.facebook.com/groups/workplaceuk/</a></figcaption></figure><p>We have implemented integration between Monika and <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Slack</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-microsoft-teams-get-notifications-straight-to-your-channels-using-incoming-3292147d6758\">Microsoft Teams</a>, <a href=\"https://medium.com/hyperjump-tech/get-monika-notifications-to-your-whatsapp-using-monika-whatsapp-notifier-78a83560c04c\">WhatsApp</a>, even <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-discord-using-discord-server-webhook-bffcd39b7b19\">Discord</a> too. In <a href=\"https://github.com/hyperjumptech/monika/pull/219/files\">June 2021</a>, <a href=\"https://github.com/adeyahya\">Ade Yahya</a> submitted a pull request to add Facebook Workplace to Monika’s growing channel choice.</p><p>Taken from their <a href=\"https://www.workplace.com/faq\">FAQ page</a>, Facebook Workplace is a communication tool that connects everyone in your company, even if they’re working remotely. Using Facebook Workplace, you can use familiar features such as News Feed, Chat, Live Video, and Groups, to get people talking and working together.</p><p>This article will show you how to integrate Monika with Facebook Workplace using Custom Integrations so that you can get your Monika notifications through your Workplace. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2Fy9XCVEKx02Q3tyHSD5%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2Fy9XCVEKx02Q3tyHSD5%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2Fy9XCVEKx02Q3tyHSD5%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"244\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/d06044967b447660f57e8e3bfdb18155/href\">https://medium.com/media/d06044967b447660f57e8e3bfdb18155/href</a></iframe><h3>Setting up the Custom Integrations</h3><p>To create a Custom Integration, you need to create a workplace (if you haven’t yet). Create your workplace at <a href=\"https://work.workplace.com\">https://work.workplace.com</a> and follow the instructions.</p><p>After you have created your workplace, go to the Admin Panel and select Integrations. Then, on the <strong>Custom Integrations</strong> section, click the <strong>Create custom integration </strong>button. Fill out the name and the description of the integration and click <strong>Create</strong>.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*tg2M6wwXHPmJOSIvZ5B3ew.png\" /><figcaption>Facebook Workplace Admin Panel</figcaption></figure><p>You will be redirected to the Integration details page. There, you can click the <strong>Create access token </strong>button to generate a new access token. Copy the access token somewhere safe, as we are going to use them later on.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*yP2dzWb5tsrJEFhbYiLwfw.png\" /><figcaption>Access Token</figcaption></figure><p>Then, go to the <strong>Permissions </strong>page. Enable the <strong>Group chat bot, Message any member, </strong>and<strong> Create link</strong> <strong>previews </strong>permissions<strong> </strong>(optional). Scroll to the bottom, and click <strong>Save.</strong></p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*zmbKVd3jvPnSOXmXrwIf8A.png\" /><figcaption>Permissions</figcaption></figure><h3>Getting the Facebook Workplace Thread ID</h3><p>After we have the access token, we need to get the Thread ID. To get the Thread ID, navigate to the home page of your Workplace. Open <strong>Chats </strong>and create a group of yourself and Monika.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bjQhhDcPeDHEhbGH6jAWEA.png\" /><figcaption>A group of me and the Monika integration</figcaption></figure><p>Look at the address bar. The last digits in the URL are your Thread ID. Save the thread ID into somewhere safe.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/382/1*vWCJON-bxe6uP4rvVvV7Yg.png\" /><figcaption>The 7231209490284210 is your thread ID</figcaption></figure><p>Now that the preparation is completed, it’s best to test your Access Token and Thread ID using Postman/Insomnia like so:</p><ul><li>URL: <a href=\"https://graph.workplace.com/me/messages\">https://graph.workplace.com/me/messages</a></li><li>Authorization: Bearer <your_access_token></li><li>Body:</li></ul><pre>{<br> \"recipient\": {<br>  \"thread_key\": <your_thread_id><br> },<br> \"message\": {<br>  \"text\": \"Test\"<br> }<br>}</pre><h3>Integrate Monika with Facebook Workplace</h3><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, Telegram, Slack, etc.</p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, Telegram, Slack, etc.</p><p>There are three ways to install Monika:</p><ul><li><strong>Install using npm or yarn (Windows/Linux/Mac)</strong><br>If you’re using NPM or Yarn, you can simply run this command in your terminal:</li></ul><pre>npm i -g <a href=\"http://twitter.com/hyperjumptech/monika\">@hyperjumptech/monika</a><br># or<br>yarn global add <a href=\"http://twitter.com/hyperjumptech/monika\">@hyperjumptech/monika</a></pre><ul><li><strong>Install script</strong><br>If you are using Linux, you can simply run this command in your terminal:</li></ul><pre>curl <a href=\"https://raw.githubusercontent.com/hyperjumptech/monika/main/scripts/monika-install.sh\">https://raw.githubusercontent.com/hyperjumptech/monika/main/scripts/monika-install.sh</a> | sh</pre><ul><li><a href=\"https://github.com/hyperjumptech/monika/releases\"><strong>Download the prebuilt binary from our release page</strong></a><strong>.</strong></li></ul><p>Now that we have our Google Chat Webhook URL and installed Monika, it’s time to create a configuration called monika.yml:</p><ul><li><strong>Use Package Managers such as Chocolatey or Snapcraft</strong></li></ul><p>For the last two weeks, we have been adding Monika to many package managers, such as <a href=\"https://community.chocolatey.org/packages/monika\">Chocolatey</a> and <a href=\"https://snapcraft.io/monika\">Snapcraft</a>. Feel free to install Monika from the package managers mentioned.</p><p>Now that we have installed Monika in our system, get your previously-saved access token and thread ID. It’s time to integrate Monika with Facebook Workplace:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/adb8fcf15e42dbdda400c27cdb65dd9e/href\">https://medium.com/media/adb8fcf15e42dbdda400c27cdb65dd9e/href</a></iframe><p>Let me explain a little bit about this sample configuration:</p><ul><li>We are going to use the Facebook Workplace notification channel, with the Thread ID and Access Token that we saved in the previous steps.</li><li>We are going to probe <a href=\"https://reqres.in/api/users/2\">https://reqres.in/api/users/</a> URL and it will return a list of users along with the response status code 200.</li><li>We want to be notified when the response status code is not 200</li><li>We want to be notified when the response time is larger than 500 milliseconds</li><li>We want to be notified when the incident or recovery has been triggered once</li></ul><p>Now that we have our configuration and Monika ready, it’s time to run monika -c monika.yml in the Terminal.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*EFJb6Lj-kdSJVtkucknbiQ.png\" /><figcaption>Working integration with Facebook Workplace!</figcaption></figure><p>Congratulations! You have successfully integrated Monika with Facebook Workplace!</p><h3>Closing</h3><p>If you use Facebook Workplace daily, integrating Monika with Facebook Workplace is a good idea. You can easily create a webhook URL in your existing servers without hassle, configure Monika, and monitor right away!</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FqHB6PCpYUbGwAQIQZJ%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FqHB6PCpYUbGwAQIQZJ%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FqHB6PCpYUbGwAQIQZJ%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"290\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/09b5ec134021b9bf62f5699c6f58bb1c/href\">https://medium.com/media/09b5ec134021b9bf62f5699c6f58bb1c/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=26280a20c906\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-facebook-workplace-using-custom-integrations-26280a20c906\">Integrate Monika with Facebook Workplace using Custom Integrations</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Install Monika on Linux using Snapcraft","link":"https://medium.com/hyperjump-tech/install-monika-on-linux-using-snapcraft-2ecff9dd98ac?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/2ecff9dd98ac","category":["monika","software-development","monitoring","javascript","open-source"],"dc:creator":"Denny Pradipta","pubDate":"Wed, 16 Mar 2022 01:18:30 GMT","atom:updated":"2022-03-16T01:18:30.762Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*MwewhQVyIenFiqjEixAGEg.png\" /></figure><p>We are improving the availability of <a href=\"https://monika.hyperjump.tech/\">Monika</a> in package managers. Last week, we showed you <a href=\"https://medium.com/hyperjump-tech/install-monika-on-windows-using-chocolatey-e3c112425758\">how to install Monika through Chocolatey</a> in Windows, this time we will show you how to install Monika on Linux using Snapcraft.</p><p><a href=\"https://snapcraft.io\"><strong>Snapcraft</strong></a> is a tool for developers to package their apps as app packages for desktop, cloud, and IoT that are easy to install, secure, cross‐platform, and dependency‐free. Using Snapcraft, users can easily discover and install packages from the Snap Store, the app store for Linux with an audience of millions.</p><p>In this article, we will show you how to install Monika on Linux using Snapcraft and run a simple configuration using the installed Monika. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F5zf2M4HgjjWszLd4a5%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F5zf2M4HgjjWszLd4a5%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2F5zf2M4HgjjWszLd4a5%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"181\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/ceb4fd2380af661521a6e88c61bea3a3/href\">https://medium.com/media/ceb4fd2380af661521a6e88c61bea3a3/href</a></iframe><h3>Installing snapd and Monika</h3><p><strong>snapd</strong> is the background service that manages and maintains your snaps, automatically. Snaps can be used on all major Linux distributions, including Ubuntu, Linux Mint, Debian, and Fedora.</p><p>If you are using Ubuntu, snapd is already preinstalled in your system. If by chance you are using other distributions such as Arch Linux, Fedora, or Pop!_OS, <a href=\"https://snapcraft.io/docs/installing-snapd\">follow the official instructions to install snapd in your system</a>.</p><p>Once you have installed snapd in your system, verify that snapd is working by running snap in your terminal:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/733/1*-XfLUJ3qXRNQW6lz82Uw6A.png\" /><figcaption>Snap is working as intended</figcaption></figure><p>Now that we have our snapd ready, we can install Monika from Snap Store by running snap install monika in your terminal (you may be prompted to enter your sudo password). Wait until the process has been completed, then run monika -v to verify that Monika is installed.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/530/1*mVZ_qYlyOGSKjTmBATIp7g.png\" /><figcaption>Monika is installed!</figcaption></figure><h3>Running Monika</h3><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p>What is Monika? Monika is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several conditions such as service outages or slow services. Also, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, <a href=\"https://medium.com/hyperjump-tech/get-monika-notifications-to-your-whatsapp-using-monika-whatsapp-notifier-78a83560c04c\">WhatsApp</a> (<strong>it’s free!</strong>), <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-microsoft-teams-get-notifications-straight-to-your-channels-using-incoming-3292147d6758\">Microsoft Teams</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Slack</a>, and many more.</p><p>Now that we have installed Monika from Snap Store, it’s time to create a new configuration called monika.yml in the current working directory:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/9d06850e6d26004d5c28c536dfadc2e0/href\">https://medium.com/media/9d06850e6d26004d5c28c536dfadc2e0/href</a></iframe><p>Let me explain a little bit about this sample configuration:</p><ul><li>We are going to use the Desktop notification channel</li><li>We are going to probe <a href=\"https://reqres.in/api/users/2\">https://reqres.in/api/users/2</a> URL and it will return a user with ID “2” along with the response status code 200.</li><li>We want to be notified when the response status code is not 200</li><li>We want to be notified when the response time is larger than 200 milliseconds</li><li>We want to be notified when the ID from the response body data is not 3 (this is just for testing purposes)</li><li>We want to be notified when the incident or recovery has been triggered two times</li></ul><p>Now that we have our configuration and Monika ready, it’s time to run monika -c monika.yml in the Terminal:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NrPANsS2WDYkH0j7Nlj5SQ.png\" /><figcaption>Monika is working!</figcaption></figure><p>Congratulations! You can now monitor your website performances using Monika that you installed from Snap Store!</p><h3>Closing</h3><p><a href=\"https://github.com/hyperjumptech/monika/issues\">Issues · hyperjumptech/monika</a></p><p>Before we added Monika into Snap Store, we prompted users to use NPM to install Monika. Because not many users have NPM in their system as they are not JavaScript developers, we added Monika to the Snap Store so that users can still use Monika without having to install NPM in their system.</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FRu9sjtZ09XOEg%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FRu9sjtZ09XOEg%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FRu9sjtZ09XOEg%2F200.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"243\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/4f476af96bfc121f69ff4ed2f4864a8b/href\">https://medium.com/media/4f476af96bfc121f69ff4ed2f4864a8b/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2ecff9dd98ac\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/install-monika-on-linux-using-snapcraft-2ecff9dd98ac\">Install Monika on Linux using Snapcraft</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Install Monika on Windows using Chocolatey","link":"https://medium.com/hyperjump-tech/install-monika-on-windows-using-chocolatey-e3c112425758?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/e3c112425758","category":["open-source","javascript","chocolatey","monitoring","monika"],"dc:creator":"Denny Pradipta","pubDate":"Tue, 08 Mar 2022 10:51:02 GMT","atom:updated":"2022-03-08T11:10:38.354Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*lDAyhyv3UJ_5svqG.png\" /><figcaption>Chocolatey</figcaption></figure><p>At Hyperjump, aside from improving our selection of notification channels, we also improve the availability of <a href=\"https://monika.hyperjump.tech\">Monika</a> in package managers, one of which is Chocolatey.</p><p>Taken from their <a href=\"https://chocolatey.org\">website</a>, Chocolatey is a software management solution on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation orders, better inventory management, and other features.</p><p>In this article, we will show you how to install Monika on Windows using Chocolatey and run a simple configuration using the installed Monika. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F4GXUa4U05Q0JAM972c%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F4GXUa4U05Q0JAM972c%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2F4GXUa4U05Q0JAM972c%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"241\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/3e89cbf8d6bdb04cc00759c5f8d2a9b7/href\">https://medium.com/media/3e89cbf8d6bdb04cc00759c5f8d2a9b7/href</a></iframe><h3>Install Chocolatey and Monika</h3><p>To install Chocolatey, click the <strong>Start </strong>button and type <strong>Powershell</strong>. Then, right-click the <strong>Windows Powershell </strong>option and click <strong>Run as Administrator</strong>. After that, paste this command bellow in the Windows Powershell and press <strong>Enter</strong>:</p><pre>Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('<a href=\"https://community.chocolatey.org/install.ps1'\">https://community.chocolatey.org/install.ps1'</a>))</pre><p>Wait a few seconds for the command to complete. If you don’t see any errors, you are ready to use Chocolatey!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UZZhHv31aRl3o2ybF3_RZg.png\" /></figure><p>Now that we have installed Chocolatey, it’s time to install Monika. To install Monika using Chocolatey, run this command below in PowerShell:</p><pre>choco install monika</pre><p>Wait a few seconds for the command to complete. After that, verify that Monika is working as expected by running monika -v in the PowerShell.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*hgIII0VGKor4jXBN0KkYYw.png\" /></figure><h3>Running Monika</h3><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p>What is Monika? Monika is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several conditions such as service outages or slow services. Also, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like SMTP mail, Telegram, <a href=\"https://whatsapp.hyperjump.tech/\"><strong>WhatsApp</strong></a> (It’s free!), etc.</p><p>Now that we have installed Monika using Chocolatey, it’s time to create a new configuration called monika.yml in the current working directory:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/e5710848102597e0c4614ac2321f230f/href\">https://medium.com/media/e5710848102597e0c4614ac2321f230f/href</a></iframe><p>Let me explain a little bit about this sample configuration:</p><ul><li>We are going to use the Desktop notification channel</li><li>We are going to probe <a href=\"https://reqres.in/api/users/2\">https://reqres.in/api/users/2</a> URL and it will return a user with ID “2” along with the response status code 200.</li><li>We want to be notified when the response status code is not 200</li><li>We want to be notified when the response time is larger than 200 milliseconds</li><li>We want to be notified when the ID from the response body data is not 3 (this is just for testing purposes)</li><li>We want to be notified when the incident or recovery has been triggered two times</li></ul><p>Now that we have our configuration and Monika ready, it’s time to run monika -c monika.yml in the PowerShell:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_PpyL_OtIJte8B8JOjDpiQ.png\" /></figure><p>Congratulations! You can now monitor your website performances using Monika that you installed from Chocolatey!</p><h3>Closing</h3><p>Before we added Monika into Chocolatey, we prompted users to use NPM to install Monika. Because not many users have NPM in their system as they are not JavaScript developers, we added Monika to the Chocolatey so that users can still use Monika without having to install NPM in their system.</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FDAtMjt1sssg1YHLU0h%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FDAtMjt1sssg1YHLU0h%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FDAtMjt1sssg1YHLU0h%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"244\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/93db78cada229aa3e013bba5109123e2/href\">https://medium.com/media/93db78cada229aa3e013bba5109123e2/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e3c112425758\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/install-monika-on-windows-using-chocolatey-e3c112425758\">Install Monika on Windows using Chocolatey</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Integrate Monika with Google Chat using Webhook","link":"https://medium.com/hyperjump-tech/integrate-monika-with-google-chat-using-webhook-3f9d57262fc1?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/3f9d57262fc1","category":["monitoring","monika","open-source","google-chat","software-development"],"dc:creator":"Denny Pradipta","pubDate":"Wed, 02 Mar 2022 00:17:35 GMT","atom:updated":"2022-03-04T01:49:06.589Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*BvzcaovjosqiW1Ad\" /><figcaption>Photo by <a href=\"https://unsplash.com/@ellecartier?utm_source=medium&utm_medium=referral\">Elle Cartier</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>At Hyperjump, one of our priorities right now is to improve Monika integrations with many collaboration tools. We have successfully integrated Monika with <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-telegram-using-telegram-bots-api-f33de6d6646\">Telegram Bots</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Slack</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-microsoft-teams-get-notifications-straight-to-your-channels-using-incoming-3292147d6758\">Microsoft Teams</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-discord-using-discord-server-webhook-bffcd39b7b19\">Discord</a>, even <a href=\"https://medium.com/hyperjump-tech/get-monika-notifications-to-your-whatsapp-using-monika-whatsapp-notifier-78a83560c04c\">WhatsApp</a> too. Per November 2021, we added <a href=\"https://workspace.google.com/intl/en_id/products/chat/\">Google Chat</a> into Monika’s growing channel choice.</p><p>If you are a Google Workspace user, chances are you knew about the classic <a href=\"https://www.theverge.com/2022/2/23/22947115/google-chat-classic-hangouts-gmail-workspace\">Google Hangouts is being replaced by Google Chat</a>. If you haven’t heard about Google Chat, taken from their official website, Google Chat helps teams collaborate fluidly and efficiently from anywhere. It’s another collaboration tool like Slack or Microsoft Teams made by Google.</p><p>This article will show you how to integrate Monika with Google Chat using Google Chat webhook so that you can get your Monika notifications through your Google Chat. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FnBQMf95HKESX1c8zAY%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FnBQMf95HKESX1c8zAY%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FnBQMf95HKESX1c8zAY%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"244\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/2d4cd80d13150fafa2c5529fca3438c5/href\">https://medium.com/media/2d4cd80d13150fafa2c5529fca3438c5/href</a></iframe><h4>Getting your Google Chat webhook</h4><p>To create your Google Chat webhook, you need to create a space. Go to the <a href=\"https://chat.google.com\">Google Chat</a> page, and navigate to the bottom-left part of the page. In the “Spaces” section, click the plus icon and click <strong>Create Space</strong>. Fill out the space details and then click <strong>Create</strong>.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/632/1*3Ctq84vJZbeKF3WTlZzgMQ.png\" /><figcaption>Create a new space</figcaption></figure><p>After you created a new space, click the menu icon on the top-right of the page to minimize the sidebar. Then, click your space’s name and select the <strong>Manage Webhook </strong>menu.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/649/1*HnjVVFdY4z1g-OSxVEZywQ.png\" /><figcaption>Manage Webhook</figcaption></figure><p>It should display a new popup to create a new incoming webhook. Fill out the incoming webhooks name and avatar URL (which is optional), and then click <strong>Save</strong>. Copy the webhook URL into somewhere else, as we are going to use it later.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/750/1*INitisicIq5fDZN2Kk86PA.png\" /><figcaption>Example webhook</figcaption></figure><h4>Integrating Monika with Google Chat</h4><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, Telegram, Slack, etc.</p><p>There are three ways to install Monika:</p><ul><li><strong>Install using npm or yarn (Windows/Linux/Mac)</strong><br>If you’re using NPM or Yarn, you can simply run this command in your terminal:</li></ul><pre>npm i -g <a href=\"http://twitter.com/hyperjumptech/monika\">@hyperjumptech/monika</a><br># or<br>yarn global add <a href=\"http://twitter.com/hyperjumptech/monika\">@hyperjumptech/monika</a></pre><ul><li><strong>Install script</strong><br>If you are using Linux, you can simply run this command in your terminal:</li></ul><pre>curl https://raw.githubusercontent.com/hyperjumptech/monika/main/scripts/monika-install.sh | sh</pre><ul><li><a href=\"https://github.com/hyperjumptech/monika/releases\"><strong>Download the prebuilt binary from our release page</strong></a><strong>.</strong></li></ul><p>Now that we have our Google Chat Webhook URL and installed Monika, it’s time to create a configuration called monika.yml:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/7f77de90c7207996224fa8f949e993d5/href\">https://medium.com/media/7f77de90c7207996224fa8f949e993d5/href</a></iframe><p>Let me explain a little bit about this configuration:</p><ul><li>You need to set the notification channel in the notifications object. There are 3 properties: id, type, and data. Set the id to any string values, as it is just an identifier. Then, set the type field to google-chat to set the notification channel to Google Chat. After that, put your Google Chat Webhook URL into the data.url field.</li><li>Monika will be probing <a href=\"https://reqres.in/api/users\">https://reqres.in/api/users</a> every ten seconds and will send you an alert if the response time is greater than half a second or the response status code is not 200.</li><li>The Incident and recovery threshold is set to one, which means when an incident/recovery happens at least once, it will send you an alert.</li></ul><p>Now that we have our configuration ready, it’s time to run it with Monika. Go to the directory where you saved the Monika configuration, and run Monika straight away using monika -c monika.yml</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*s5bgaYarW1o9qNDOb5b4Lg.png\" /><figcaption>A working example of Monika integration with Google Chat</figcaption></figure><p>Congratulations! Now that you have successfully integrated Monika with Google Chat, you will be notified if your website is slow or down through your created Google Chat space.</p><h3>Closing</h3><p>If your company is using Google Chat as their collaboration tool, integrating Monika with Google Chat is a good idea. You can easily create a webhook URL in your existing space without hassle, configure Monika, and monitor right away!</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FJRmluCCJv13yEDmEFd%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FJRmluCCJv13yEDmEFd%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FJRmluCCJv13yEDmEFd%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"244\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/5c08e0c09fcb104ba36efc164ca36b7f/href\">https://medium.com/media/5c08e0c09fcb104ba36efc164ca36b7f/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3f9d57262fc1\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-google-chat-using-webhook-3f9d57262fc1\">Integrate Monika with Google Chat using Webhook</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Use Existing Insomnia Collections with Monika to Monitor your APIs","link":"https://medium.com/hyperjump-tech/use-existing-insomnia-collections-with-monika-to-monitor-your-apis-4abc0e608348?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/4abc0e608348","category":["open-source","javascript","insomnia","software-development","monika"],"dc:creator":"Denny Pradipta","pubDate":"Fri, 18 Feb 2022 08:02:56 GMT","atom:updated":"2022-03-04T01:49:30.172Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*qTQs6ep5WH3Y2ceB\" /><figcaption>Photo by <a href=\"https://unsplash.com/@douglasamarelo?utm_source=medium&utm_medium=referral\">Douglas Lopes</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>For those who haven’t heard about Insomnia, which is very unlikely, <a href=\"https://insomnia.rest/\">Insomnia</a> is a collaborative API client and design tool to build and test APIs quickly. To put it simply, it’s pretty much like Postman.</p><p>If we compare it with Postman, it doesn’t have such glamorous features as <a href=\"https://medium.com/hyperjump-tech/use-existing-postman-collections-with-monika-an-alternative-solution-to-postman-monitoring-770572eedb2c\">Postman collections monitoring</a>. Of course, because Insomnia is just an API client and design tool, we understand. But guess who can do API monitoring besides Postman? Monika. In the latest version of Monika, you can run Monika with Insomnia collection.</p><p>This article will show you how to use your existing Insomnia collections with Monika so you can create your own “Insomnia collections monitoring” at home. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F3ohzdD58rieeeS538c%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F3ohzdD58rieeeS538c%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2F3ohzdD58rieeeS538c%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"242\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/719a03e1330b5d7ce8feee05e3b59ab6/href\">https://medium.com/media/719a03e1330b5d7ce8feee05e3b59ab6/href</a></iframe><h3>Run Insomnia Collection with Monika</h3><p><a href=\"https://monika.hyperjump.tech\">Monika</a></p><p>What is Monika? Monika is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several conditions such as service outages or slow services. Also, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like SMTP mail, Telegram, <a href=\"https://whatsapp.hyperjump.tech/\"><strong>WhatsApp</strong></a> (It’s free!), etc.</p><p>Install Monika via npm install -g @hyperjumptech/monika or if you don’t have NPM in your system, you can <a href=\"https://github.com/hyperjumptech/monika/releases\">download the prebuilt binary from our release page</a>. After installing Monika, run monika -v to verify your Monika installation.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/530/1*NCa_JT4SdiaDPPdHgIzq2Q.png\" /><figcaption>Example of Monika version</figcaption></figure><h4>Export your Insomnia Collection</h4><p>If you don’t have any Insomnia collection, let’s try to create one. Open Insomnia, and navigate to the <strong>Create</strong> button at the top right of the window. Then, select a <strong>Request Collection</strong>. Enter the desired name for the collection, and click <strong>Create</strong>.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*22NyPUhQEBzYw9hnIu0Fhw.png\" /><figcaption>Example created collection</figcaption></figure><p>Then, proceed to add a new request by clicking the plus button on the top left of the window and clicking the <strong>New Request </strong>option. Give the request a name. Then, let’s try to add a simple GET request, with the URL using a mock REST API (e.g <a href=\"https://reqres.in/api/users\">https://reqres.in/api/users</a>), and click <strong>Send</strong>.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Ltu-chR2G8eWDSHjnJXqaw.png\" /><figcaption>Example response of the <a href=\"https://reqres.in/api/users\">https://reqres.in/api/users</a></figcaption></figure><p>Now that we can confirm that the API is working, let’s export the collection by clicking the caret down icon beside the collection name at the top left of the window and selecting the <strong>Import/Export </strong>option. Then, click the <strong>Export Data</strong> button and select <strong>Export the “Your collection name” Collection</strong>. After that, select the requests you want to export, select the format to Insomnia <strong>export version 4</strong> (JSON/YAML), select the destination folder, and you’re halfway done!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/661/1*LUN8aYgrX0no8q5dCUSfOQ.png\" /><figcaption>Example of exporting data</figcaption></figure><h4><strong>Running Monika with exported Insomnia collections</strong></h4><p>Now that you have installed Monika and exported your Insomnia collection, it’s time to run your API monitoring using Monika. Head to the directory where you exported your Insomnia collection, and run monika --insomnia <your_insomnia_file> in your terminal:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Z8syUyvOD_TLmJwqUa13ew.png\" /><figcaption>It’s working!</figcaption></figure><p>Congratulations! Now you can use Monika as an Insomnia Monitoring, just like Postman!</p><h3><strong>Closing</strong></h3><p>Insomnia is another popular REST client that can be used for testing RESTful as well as GraphQL APIs. Because of its simplicity, it may not have such features as collection monitoring like Postman. Using Monika, you can monitor your Insomnia collection just like Postman Monitoring with just one line of command.</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FxUA7aQiWkdqWoRVtiE%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FxUA7aQiWkdqWoRVtiE%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FxUA7aQiWkdqWoRVtiE%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"326\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/2a2ef7a065f5fd76673e707e2e8c3002/href\">https://medium.com/media/2a2ef7a065f5fd76673e707e2e8c3002/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=4abc0e608348\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/use-existing-insomnia-collections-with-monika-to-monitor-your-apis-4abc0e608348\">Use Existing Insomnia Collections with Monika to Monitor your APIs</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Integrate Monika with Discord using Discord Server Webhook","link":"https://medium.com/hyperjump-tech/integrate-monika-with-discord-using-discord-server-webhook-bffcd39b7b19?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/bffcd39b7b19","category":["webhooks","software-development","monika","javascript","discord"],"dc:creator":"Denny Pradipta","pubDate":"Tue, 15 Feb 2022 13:56:07 GMT","atom:updated":"2022-03-04T01:49:47.052Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*FSwLjfeC9j7oK5IL\" /><figcaption>Photo by <a href=\"https://unsplash.com/@alexbemore?utm_source=medium&utm_medium=referral\">Alexander Shatov</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>We have implemented integration between Monika and <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-telegram-using-telegram-bots-api-f33de6d6646\">Telegram Bots</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Slack</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-microsoft-teams-get-notifications-straight-to-your-channels-using-incoming-3292147d6758\">Microsoft Teams</a>, even <a href=\"https://medium.com/hyperjump-tech/get-monika-notifications-to-your-whatsapp-using-monika-whatsapp-notifier-78a83560c04c\">WhatsApp</a> too. Per <a href=\"https://github.com/hyperjumptech/monika/pull/125\">April 2021</a>, we added Discord into Monika’s growing channel choice.</p><p><a href=\"https://www.discord.com\">Discord</a> is a free voice, video, and text chat app that’s used by tens of millions of people ages 13+ to talk and hang out with their communities and friends. Discord has been getting popular aside from gaming. Discord allows you to chat and use voice channels to communicate with each other for free.</p><p>With that in mind, it can be used for anything such as family and friends, private communities, and internal workplace communication tools. Even better, Discord supports bots and webhooks too!</p><p>This article will show you how to integrate Monika with Discord using Discord server webhook so that you can get your Monika notifications through your maintained Discord server. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FdMsh6gRYJDymXSIatd%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FdMsh6gRYJDymXSIatd%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FdMsh6gRYJDymXSIatd%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"289\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/04b7f4d42f6fea2823dfd644a4d85e2c/href\">https://medium.com/media/04b7f4d42f6fea2823dfd644a4d85e2c/href</a></iframe><h3>Getting your Discord server webhook</h3><p>To create your server webhook, you need to create a server first (if you haven’t yet). Navigate to the left sidebar of your Discord app, and click the <strong>Plus icon</strong> to create a new server. Answer the questions given, give your server a name, and click <strong>Create</strong> button.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/437/1*-fKT9mZWoBVBc79nZu84AQ.png\" /><figcaption>Create a server</figcaption></figure><p>Now that your server is created, click your server’s name at the top left of the app, and select <strong>Server Settings</strong>. Then, navigate to the <strong>Integrations </strong>menu.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1019/1*PHc7LOS819nrZBoJnJXegQ.png\" /><figcaption>Integrations menu</figcaption></figure><p>After that, click the <strong>Create Webhook </strong>button. Then, click the <strong>New Webhook</strong> button. Enter the desired name for the webhook (e.g Monika Webhook), select which channel (e.g #general), and click the <strong>Save Changes</strong> button. Now that you have created your webhook, click the <strong>Copy Webhook URL</strong> button and save the webhook URL somewhere else.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/1*1rn8q0Fensgv6KsWej7jIg.png\" /><figcaption>Created webhook</figcaption></figure><h3>Integrate Monika with Discord</h3><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, Telegram, Slack, etc.</p><p>Install Monika via npm install -g @hyperjumptech/monika or if you don’t have NPM in your system, you can <a href=\"https://github.com/hyperjumptech/monika/releases\">download the prebuilt binary from our release page</a>.</p><p>Now that we have our Webhook URL, it’s time to create a configuration called monika.yml:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/c7328d487ceea98ab0e45bb4b728d0f1/href\">https://medium.com/media/c7328d487ceea98ab0e45bb4b728d0f1/href</a></iframe><p>Let me explain a little bit about this configuration:</p><ul><li>You need to set the notification channel in the notifications object. There are 3 properties: id, type, and data. Set the id to any string values, as it is just an identifier. Then, set the type field to discord to set the notification channel to Discord. After that, put your Discord Webhook URL into the data.url field.</li><li>Monika will be probing <a href=\"https://reqres.in/api/users\">https://reqres.in/api/users</a> every ten seconds and will send you an alert if the response time is greater than half a second or the response status code is not 200.</li><li>The Incident and recovery threshold is set to one, which means when an incident/recovery happens at least once, it will send you an alert.</li></ul><p>Now that we have our configuration ready, it’s time to run it with Monika. Go to the directory where you saved the Monika configuration, and run Monika straight away using monika -c monika.yml</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*0rFO4kPzTaIyGCYts83oBw.png\" /><figcaption>Running Monika with working Discord integration</figcaption></figure><p>Congratulations! Now that you have successfully integrated Monika with Discord, you will be notified if your website is slow or down.</p><h3>Closing</h3><p>If you monitor your community web pages or internal workplace communication tools using Discord, integrating Monika to Discord is a good idea. You can easily create a webhook URL in your existing servers without hassle, configure Monika, and monitor right away!</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F2rAKTgJIQe1buYU1R5%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F2rAKTgJIQe1buYU1R5%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2F2rAKTgJIQe1buYU1R5%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"348\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/143c40e6248dbb766ab6a69b0567adf7/href\">https://medium.com/media/143c40e6248dbb766ab6a69b0567adf7/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=bffcd39b7b19\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-discord-using-discord-server-webhook-bffcd39b7b19\">Integrate Monika with Discord using Discord Server Webhook</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Use PING to check your internet connection for your Monika API monitoring","link":"https://medium.com/hyperjump-tech/use-ping-to-check-your-internet-connection-for-your-monika-api-monitoring-8a875a527512?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/8a875a527512","category":["javascript","monika","ping","open-source","monitoring"],"dc:creator":"Denny Pradipta","pubDate":"Wed, 09 Feb 2022 01:07:33 GMT","atom:updated":"2022-03-04T01:50:18.720Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*HNZxvDYjZGD61paE\" /><figcaption>Photo by <a href=\"https://unsplash.com/@mbaumi?utm_source=medium&utm_medium=referral\">Mika Baumeister</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>Basically, <a href=\"https://monika.hyperjump.tech\">Monika</a>’s default behavior is hitting your API periodically and reporting you the performance and the result of your API. Of course, “hitting your API periodically” means it requires a working internet connection.</p><p>And let’s face it, even your internet service providers can be slow and experience downtime too. While your internet service provider is having a problem, it could send you a false alarm saying that your API is down. That’s why many people tend to open their Terminal and run the ping 8.8.8.8 command to ensure that they are still connected to the internet.</p><p>In the newest version of Monika, we have included the PING command inside the Monika. So, this article will show you how to use PING in Monika as a secondary check so that you will know the real story behind your API’s failures. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F7Sh3Pt6R9ELubdoH3K%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F7Sh3Pt6R9ELubdoH3K%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2F7Sh3Pt6R9ELubdoH3K%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"244\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/da2e20e275309ba682979c89199daf7c/href\">https://medium.com/media/da2e20e275309ba682979c89199daf7c/href</a></iframe><h3>Installing Monika</h3><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, Telegram, Slack, etc.</p><p>Install Monika via npm install -g @hyperjumptech/monika or if you don’t have NPM in your system, you can <a href=\"https://github.com/hyperjumptech/monika/releases\">download the prebuilt binary from our release page</a>. After installing Monika, run monika -v to verify your Monika installation.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/proxy/1*NCa_JT4SdiaDPPdHgIzq2Q.png\" /><figcaption>Monika is installed successfully</figcaption></figure><h3>Preparing a configuration</h3><p>Now that we have installed Monika, let’s prepare a configuration:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/b5de5206fa4f4d11f70553c752dbf871/href\">https://medium.com/media/b5de5206fa4f4d11f70553c752dbf871/href</a></iframe><p>Let me explain this configuration a little bit:</p><ul><li>This configuration uses Desktop notifications</li><li>This probe configuration will do two requests: <strong>Hit google.com using PING</strong>. After PING success, it will <strong>hit </strong><a href=\"https://reqres.in/api/users\"><strong>https://reqres.in/api/users</strong></a><strong> using the GET method</strong>. If by chance the first request fails, it will not proceed to the next request.</li><li>This probe configuration will alert you if the status code is not 200, or the request took longer than two seconds</li><li>This probe configuration will alert you about incidents/recoveries if it happens once, so if there is an incident you will be notified immediately. The same goes if there is a recovery.</li></ul><p>Save the configuration above as monika.yaml in your local machine and run monika -c monika.yaml command in your terminal inside the directory where you saved the configuration file.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*96YDF6fKh9uc1ABw5Z_6Cw.png\" /><figcaption>It’s up and running</figcaption></figure><p>We’re not finished yet. We want to know what will happen if we failed to PING Google. Let Monika run in the background, and try to disconnect yourself from the internet. You will get a notification:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9-EXof54-ekJfzorw269ew.png\" /><figcaption>Error code 4</figcaption></figure><p>There is some explanation for the error message:</p><ul><li>0: ‘URI not found’</li><li>1: ‘Connection reset’</li><li>2: ‘Connection refused’</li><li>3: ‘Unknown error’</li><li>4: ‘Ping timed out’</li><li>599: ‘Request Timed out’</li></ul><p>It shows PING timed out because your internet is disconnected. So, we could distinguish which alerts come from the API itself, and which alerts come from your internet problem.</p><h3>Closing</h3><p>Monitoring your API requires internet, and sometimes your internet can be unreliable. Using this PING functionality, you can be aware of false alarms from Monika. Sure, we already implemented <a href=\"https://github.com/hyperjumptech/monika/pull/357\">STUN server checking as secondary proof</a>, but it’s better to be more safe than sorry.</p><p><a href=\"https://github.com/hyperjumptech/monika/issues\">Issues · hyperjumptech/monika</a></p><p>If you have questions or find issues while using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>That’s it for today, see you next week!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2Fl1J3CbFgn5o7DGRuE%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2Fl1J3CbFgn5o7DGRuE%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2Fl1J3CbFgn5o7DGRuE%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"280\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/5fa8f4266a7202d18b96ad7d41b42eef/href\">https://medium.com/media/5fa8f4266a7202d18b96ad7d41b42eef/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=8a875a527512\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/use-ping-to-check-your-internet-connection-for-your-monika-api-monitoring-8a875a527512\">Use PING to check your internet connection for your Monika API monitoring</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Memisahkan web app dengan data processing pada aplikasi berbasis Next.js menggunakan Bull dan Redis","link":"https://medium.com/hyperjump-tech/memisahkan-web-app-dengan-data-processing-pada-aplikasi-berbasis-next-js-menggunakan-bull-dan-redis-7ba5a833a0fa?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/7ba5a833a0fa","category":["software-development","monitoring","message-queue","symon","javascript"],"dc:creator":"Denny Pradipta","pubDate":"Tue, 01 Feb 2022 09:15:34 GMT","atom:updated":"2022-03-04T01:56:43.177Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*lnw33CoTw2sF4GAL\" /><figcaption>Photo by <a href=\"https://unsplash.com/@fosterious?utm_source=medium&utm_medium=referral\">Sean Foster</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>Selain mengembangkan <a href=\"https://github.com/hyperjumptech/monika\">Monika</a>, kami di <a href=\"https://hyperjump.tech\">Hyperjump Tech</a> saat ini secara aktif mengembangkan Symon. Symon adalah <em>dashboard monitoring tool </em>yang menggunakan Monika di belakangnya.</p><p>Salah satu hal yang terjadi selama beberapa hari saat mengembangkan Symon adalah seringnya halaman aplikasi web Symon kami mengalami <em>downtime</em>, yang disebabkan oleh server kami kehabisan memori.</p><p>Kami awalnya mengkonfigurasi server Symon dengan memori 4 GB, jadi apa hal pertama yang harus dilakukan ketika memori penuh? Secara intuitif, kami pasti menambahkan lebih banyak RAM, jadi kami meningkatkan RAM server kami ke 8 GB. Tapi apakah itu menyelesaikan masalah? Sayangnya tidak, karena server kami masih kekurangan memori.</p><p>Jadi, kami mencari apa yang salah dan menemukan bahwa masalah utamanya adalah server kami menampilkan aplikasi web Symon dan memproses data laporan <em>instance </em>Monika di satu server secara bersamaan.</p><p>Sebagai gambaran, berikut adalah <em>flow </em>saat ini di Symon:</p><ul><li>Suatu <em>instance </em>Monika melaporkan data <em>probe</em> dengan melakukan <em>request </em>API ke Symon</li><li>Symon menerima <em>request </em>dan memprosesnya langsung</li><li>Symon mengembalikan hasil respon dari API</li><li>Jika Symon membutuhkan waktu lebih lama untuk memproses data laporan <em>probe</em>, Symon akan mengalami macet saat memproses data masuk lainnya.</li></ul><p>Ini menjadi masalah karena data laporan <em>probe</em> yang diberikan kepada Symon bisa memakan waktu lama untuk diproses mengingat ukurannya yang cukup besar. Jadi kita perlu memisahkan aplikasi web dan pemrosesan data laporan pengujian untuk mengurangi beban server. Pertanyaan besarnya adalah: <strong>bagaimana caranya?</strong></p><p>Tim kami memutuskan bahwa kami <strong>HANYA</strong> harus membuat <em>worker </em>untuk menangani data laporan <em>probe</em>, dan itu harus dipisahkan dari kode aplikasi web utama. Pada Symon API yang awalnya memproses data, kita perlu mengubahnya menjadi hanya menambahkan data ke <em>queue</em> yang sedang diproses oleh <em>worker</em>.</p><p>Teman kami <a href=\"https://medium.com/@kevin-hyperjump\">Kevin Hermawan</a> mengusulkan suatu <em>library </em>bernama <a href=\"https://optimalbits.github.io/bull/\"><strong>Bull</strong></a>, sebuah <em>library </em>berbasis NodeJS yang mengimplementasikan sistem <em>queue</em> yang cepat dan kuat menggunakan <a href=\"https://redis.io/\"><strong>Redis</strong></a>. Dengan menggunakan Bull, kita dapat membuat <em>queue</em> untuk menerima <em>job</em> dari API, menyimpan <em>job</em> di Redis dan juga membuat <em>worker </em>untuk memproses <em>job</em> dalam <em>queue</em>.</p><p>Tanpa basa-basi, kami mengeksekusi ide ini. Kami membaca bagaimana Bull dapat membatasi <em>job</em> yang diproses dalam waktu dan durasi tertentu, mengatur <em>delay</em> antara <em>job</em> yang sedang diproses dan apa yang harus dilakukan ketika suatu <em>job </em>selesai. Akhirnya, file <em>worker </em>kami telah selesai:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/e732c45326a6ec429868d9905be87176/href\">https://medium.com/media/e732c45326a6ec429868d9905be87176/href</a></iframe><p>Lalu kami membuat satu server tambahan, menginstal Redis, dan men<em>deploy</em> <em>worker </em>yang sudah dibuat sebelumnya. Setelah proses <em>deploy </em>selesai, kami mendapat log yang mengatakan bahwa <em>report queue </em>telah terhubung ke Redis. <em>So far so good.</em></p><p>Kembali ke API, kami harus memindahkan semua logika bisnis kami dari API ke dalam blok “<em>report queue job processor</em>” di file <em>worker</em>, dan kami membuat perubahan pada kodingan API kami:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/8173700749efc9a216737d35a42f1c7d/href\">https://medium.com/media/8173700749efc9a216737d35a42f1c7d/href</a></iframe><p>Jadi, API yang dulu menangani pemrosesan data yang masuk dari Monika sekarang hanya menambahkan suatu <em>job </em>ke <em>queue</em> berisikan data dari Monika, dan data yang ditambahkan ke <em>queue </em>diproses oleh <em>worker</em>.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/959/1*gb5mQ4idOSezpQoYmeIzrg.png\" /><figcaption>Worker memproses job dari queue</figcaption></figure><p>Menggunakan skema ini, kami berhasil mengurangi beban server secara signifikan. Aplikasi web Symon kami yang sebelumnya sering <em>down </em>sekarang cukup stabil dan <em>worker-</em>nya<em> </em>juga bekerja dengan lancar!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/961/1*_wpXn55rGdeFkoOcSVUNcw.png\" /><figcaption>Kondisi RAM server aplikasi web Symon</figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/959/1*DQLj-8yrB1JUPWuaSiEgNQ.png\" /><figcaption>Kondisi RAM server worker dan Redis</figcaption></figure><h3>Closing</h3><p>Kami akhirnya berhasil mengurangi beban server dengan memisahkan pemrosesan data laporan dari Monika dan server aplikasi web. Tetapi apakah ini jawaban merupakan jawaban pasti untuk masalah ini? Meskipun kami senang dengan aplikasi web yang tidak kehabisan memori, kami tetap harus optimasi terus menerus lebih baik dari sekarang. Karena di atas langit masih ada Hotman Paris. <em>Eh, </em>maksud kami masih ada langit.</p><p>Kami masih bereksperimen dengan mengoptimalkan kinerja pemrosesan data Monika, terutama ketika kami menemukan bahwa Bull memiliki pembaruan yang disebut <a href=\"https://github.com/taskforcesh/bullmq\">BullMQ</a>, versi terbaru dari Bull yang seluruhnya ditulis dalam TypeScript.</p><p>Kami juga masih mempertimbangkan solusi yang lebih baik tanpa menggunakan Redis, mungkin dengan menggunakan database SQL sederhana untuk menyimpan pekerjaan dan menggunakan <a href=\"https://github.com/breejs/bree\">Bree</a> sebagai <em>job scheduler</em>. Tapi itu hanya ide yang belum dicoba.</p><p>Jika Anda menyukai artikel ini, jangan lupa untuk memberikan <em>clap</em> dan membagikan artikel ini ke teman-teman Anda!</p><p>Terima kasih telah membaca artikel ini, sampai jumpa minggu depan!</p><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://hyperjump.tech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=7ba5a833a0fa\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/memisahkan-web-app-dengan-data-processing-pada-aplikasi-berbasis-next-js-menggunakan-bull-dan-redis-7ba5a833a0fa\">Memisahkan web app dengan data processing pada aplikasi berbasis Next.js menggunakan Bull dan Redis</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"}]},"__N_SSG":true}