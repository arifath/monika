{"pageProps":{"articles":[{"title":"Integrate Monika with Discord using Discord Server Webhook","link":"https://medium.com/hyperjump-tech/integrate-monika-with-discord-using-discord-server-webhook-bffcd39b7b19?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/bffcd39b7b19","category":["webhooks","software-development","monika","javascript","discord"],"dc:creator":"Denny Pradipta","pubDate":"Tue, 15 Feb 2022 13:56:07 GMT","atom:updated":"2022-02-15T13:56:07.415Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*FSwLjfeC9j7oK5IL\" /><figcaption>Photo by <a href=\"https://unsplash.com/@alexbemore?utm_source=medium&utm_medium=referral\">Alexander Shatov</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>We have implemented integration between Monika and <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-telegram-using-telegram-bots-api-f33de6d6646\">Telegram Bots</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Slack</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-microsoft-teams-get-notifications-straight-to-your-channels-using-incoming-3292147d6758\">Microsoft Teams</a>, even <a href=\"https://medium.com/hyperjump-tech/get-monika-notifications-to-your-whatsapp-using-monika-whatsapp-notifier-78a83560c04c\">WhatsApp</a> too. Per <a href=\"https://github.com/hyperjumptech/monika/pull/125\">April 2021</a>, we added Discord into Monika’s growing channel choice.</p><p><a href=\"https://www.discord.com\">Discord</a> is a free voice, video, and text chat app that’s used by tens of millions of people ages 13+ to talk and hang out with their communities and friends. Discord has been getting popular aside from gaming. Discord allows you to chat and use voice channels to communicate with each other for free.</p><p>With that in mind, it can be used for anything such as family and friends, private communities, and internal workplace communication tools. Even better, Discord supports bots and webhooks too!</p><p>This article will show you how to integrate Monika with Discord using Discord server webhook so that you can get your Monika notifications through your maintained Discord server. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FdMsh6gRYJDymXSIatd%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FdMsh6gRYJDymXSIatd%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FdMsh6gRYJDymXSIatd%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"289\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/04b7f4d42f6fea2823dfd644a4d85e2c/href\">https://medium.com/media/04b7f4d42f6fea2823dfd644a4d85e2c/href</a></iframe><h3>Getting your Discord server webhook</h3><p>To create your server webhook, you need to create a server first (if you haven’t yet). Navigate to the left sidebar of your Discord app, and click the <strong>Plus icon</strong> to create a new server. Answer the questions given, give your server a name, and click <strong>Create</strong> button.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/437/1*-fKT9mZWoBVBc79nZu84AQ.png\" /><figcaption>Create a server</figcaption></figure><p>Now that your server is created, click your server’s name at the top left of the app, and select <strong>Server Settings</strong>. Then, navigate to the <strong>Integrations </strong>menu.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1019/1*PHc7LOS819nrZBoJnJXegQ.png\" /><figcaption>Integrations menu</figcaption></figure><p>After that, click the <strong>Create Webhook </strong>button. Then, click the <strong>New Webhook</strong> button. Enter the desired name for the webhook (e.g Monika Webhook), select which channel (e.g #general), and click the <strong>Save Changes</strong> button. Now that you have created your webhook, click the <strong>Copy Webhook URL</strong> button and save the webhook URL somewhere else.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1000/1*1rn8q0Fensgv6KsWej7jIg.png\" /><figcaption>Created webhook</figcaption></figure><h3>Integrate Monika with Discord</h3><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, Telegram, Slack, etc.</p><p>Install Monika via npm install -g @hyperjumptech/monika or if you don’t have NPM in your system, you can <a href=\"https://github.com/hyperjumptech/monika/releases\">download the prebuilt binary from our release page</a>.</p><p>Now that we have our Webhook URL, it’s time to create a configuration called monika.yml:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/c7328d487ceea98ab0e45bb4b728d0f1/href\">https://medium.com/media/c7328d487ceea98ab0e45bb4b728d0f1/href</a></iframe><p>Let me explain a little bit about this configuration:</p><ul><li>You need to set the notification channel in the notifications object. There are 3 properties: id, type, and data. Set the id to any string values, as it is just an identifier. Then, set the type field to discord to set the notification channel to Discord. After that, put your Discord Webhook URL into the data.url field.</li><li>Monika will be probing <a href=\"https://reqres.in/api/users\">https://reqres.in/api/users</a> every ten seconds and will send you an alert if the response time is greater than half a second or the response status code is not 200.</li><li>The Incident and recovery threshold is set to one, which means when an incident/recovery happens at least once, it will send you an alert.</li></ul><p>Now that we have our configuration ready, it’s time to run it with Monika. Go to the directory where you saved the Monika configuration, and run Monika straight away using monika -c monika.yml</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*0rFO4kPzTaIyGCYts83oBw.png\" /><figcaption>Running Monika with working Discord integration</figcaption></figure><p>Congratulations! Now that you have successfully integrated Monika with Discord, you will be notified if your website is slow or down.</p><h3>Closing</h3><p>If you monitor your community web pages or internal workplace communication tools using Discord, integrating Monika to Discord is a good idea. You can easily create a webhook URL in your existing servers without hassle, configure Monika, and monitor right away!</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>Also, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">we’re looking for alpha testers to test Symon</a>, a dashboard monitoring tool powered by Monika! If you are interested in being an alpha tester, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">click here to learn more</a>.</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F2rAKTgJIQe1buYU1R5%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F2rAKTgJIQe1buYU1R5%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2F2rAKTgJIQe1buYU1R5%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"348\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/143c40e6248dbb766ab6a69b0567adf7/href\">https://medium.com/media/143c40e6248dbb766ab6a69b0567adf7/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=bffcd39b7b19\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-discord-using-discord-server-webhook-bffcd39b7b19\">Integrate Monika with Discord using Discord Server Webhook</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Use PING to check your internet connection for your Monika API monitoring","link":"https://medium.com/hyperjump-tech/use-ping-to-check-your-internet-connection-for-your-monika-api-monitoring-8a875a527512?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/8a875a527512","category":["javascript","monika","ping","open-source","monitoring"],"dc:creator":"Denny Pradipta","pubDate":"Wed, 09 Feb 2022 01:07:33 GMT","atom:updated":"2022-02-09T01:07:33.801Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*HNZxvDYjZGD61paE\" /><figcaption>Photo by <a href=\"https://unsplash.com/@mbaumi?utm_source=medium&utm_medium=referral\">Mika Baumeister</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>Basically, <a href=\"https://monika.hyperjump.tech\">Monika</a>’s default behavior is hitting your API periodically and reporting you the performance and the result of your API. Of course, “hitting your API periodically” means it requires a working internet connection.</p><p>And let’s face it, even your internet service providers can be slow and experience downtime too. While your internet service provider is having a problem, it could send you a false alarm saying that your API is down. That’s why many people tend to open their Terminal and run the ping 8.8.8.8 command to ensure that they are still connected to the internet.</p><p>In the newest version of Monika, we have included the PING command inside the Monika. So, this article will show you how to use PING in Monika as a secondary check so that you will know the real story behind your API’s failures. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F7Sh3Pt6R9ELubdoH3K%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F7Sh3Pt6R9ELubdoH3K%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2F7Sh3Pt6R9ELubdoH3K%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"244\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/da2e20e275309ba682979c89199daf7c/href\">https://medium.com/media/da2e20e275309ba682979c89199daf7c/href</a></iframe><h3>Installing Monika</h3><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, Telegram, Slack, etc.</p><p>Install Monika via npm install -g @hyperjumptech/monika or if you don’t have NPM in your system, you can <a href=\"https://github.com/hyperjumptech/monika/releases\">download the prebuilt binary from our release page</a>. After installing Monika, run monika -v to verify your Monika installation.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/proxy/1*NCa_JT4SdiaDPPdHgIzq2Q.png\" /><figcaption>Monika is installed successfully</figcaption></figure><h3>Preparing a configuration</h3><p>Now that we have installed Monika, let’s prepare a configuration:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/b5de5206fa4f4d11f70553c752dbf871/href\">https://medium.com/media/b5de5206fa4f4d11f70553c752dbf871/href</a></iframe><p>Let me explain this configuration a little bit:</p><ul><li>This configuration uses Desktop notifications</li><li>This probe configuration will do two requests: <strong>Hit google.com using PING</strong>. After PING success, it will <strong>hit </strong><a href=\"https://reqres.in/api/users\"><strong>https://reqres.in/api/users</strong></a><strong> using the GET method</strong>. If by chance the first request fails, it will not proceed to the next request.</li><li>This probe configuration will alert you if the status code is not 200, or the request took longer than two seconds</li><li>This probe configuration will alert you about incidents/recoveries if it happens once, so if there is an incident you will be notified immediately. The same goes if there is a recovery.</li></ul><p>Save the configuration above as monika.yaml in your local machine and run monika -c monika.yaml command in your terminal inside the directory where you saved the configuration file.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*96YDF6fKh9uc1ABw5Z_6Cw.png\" /><figcaption>It’s up and running</figcaption></figure><p>We’re not finished yet. We want to know what will happen if we failed to PING Google. Let Monika run in the background, and try to disconnect yourself from the internet. You will get a notification:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9-EXof54-ekJfzorw269ew.png\" /><figcaption>Error code 4</figcaption></figure><p>There is some explanation for the error message:</p><ul><li>0: ‘URI not found’</li><li>1: ‘Connection reset’</li><li>2: ‘Connection refused’</li><li>3: ‘Unknown error’</li><li>4: ‘Ping timed out’</li><li>599: ‘Request Timed out’</li></ul><p>It shows PING timed out because your internet is disconnected. So, we could distinguish which alerts come from the API itself, and which alerts come from your internet problem.</p><h3>Closing</h3><p>Monitoring your API requires internet, and sometimes your internet can be unreliable. Using this PING functionality, you can be aware of false alarms from Monika. Sure, we already implemented <a href=\"https://github.com/hyperjumptech/monika/pull/357\">STUN server checking as secondary proof</a>, but it’s better to be more safe than sorry.</p><p><a href=\"https://github.com/hyperjumptech/monika/issues\">Issues · hyperjumptech/monika</a></p><p>If you have questions or find issues while using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>Also, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">we’re looking for alpha testers to test Symon</a>, a dashboard monitoring tool powered by Monika! If you are interested in being a beta tester, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">click here to learn more</a>.</p><p>That’s it for today, see you next week!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2Fl1J3CbFgn5o7DGRuE%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2Fl1J3CbFgn5o7DGRuE%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2Fl1J3CbFgn5o7DGRuE%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"280\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/5fa8f4266a7202d18b96ad7d41b42eef/href\">https://medium.com/media/5fa8f4266a7202d18b96ad7d41b42eef/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=8a875a527512\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/use-ping-to-check-your-internet-connection-for-your-monika-api-monitoring-8a875a527512\">Use PING to check your internet connection for your Monika API monitoring</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Memisahkan web app dengan data processing pada aplikasi berbasis Next.js menggunakan Bull dan Redis","link":"https://medium.com/hyperjump-tech/memisahkan-web-app-dengan-data-processing-pada-aplikasi-berbasis-next-js-menggunakan-bull-dan-redis-7ba5a833a0fa?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/7ba5a833a0fa","category":["software-development","monitoring","message-queue","symon","javascript"],"dc:creator":"Denny Pradipta","pubDate":"Tue, 01 Feb 2022 09:15:34 GMT","atom:updated":"2022-02-01T09:15:34.403Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*lnw33CoTw2sF4GAL\" /><figcaption>Photo by <a href=\"https://unsplash.com/@fosterious?utm_source=medium&utm_medium=referral\">Sean Foster</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>Selain mengembangkan <a href=\"https://github.com/hyperjumptech/monika\">Monika</a>, kami di <a href=\"https://hyperjump.tech\">Hyperjump Tech</a> saat ini secara aktif mengembangkan Symon. <a href=\"https://symon.hyperjump.tech/\">Symon</a> adalah <em>dashboard monitoring tool </em>yang menggunakan Monika di belakangnya. Dengan Symon, Anda dapat mengelola konfigurasi Monika berdasarkan proyek, melihat laporan kinerja dari jam hingga bulanan, dan memantau setiap insiden yang terjadi pada situs Anda. Symon memungkinkan Anda untuk memantau situs Anda dari berbagai lokasi berbeda.</p><p>Saat ini, <strong>Symon masih dalam fase <em>alpha</em></strong>, jadi kami sering mengujinya (dan Anda juga bisa menjadi <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\"><em>alpha tester</em></a> kami jika Anda berkenan). Salah satu hal yang terjadi selama beberapa hari saat mengembangkan Symon adalah seringnya halaman aplikasi web Symon kami mengalami <em>downtime</em>, yang disebabkan oleh server kami kehabisan memori.</p><p>Kami awalnya mengkonfigurasi server Symon dengan memori 4 GB, jadi apa hal pertama yang harus dilakukan ketika memori penuh? Secara intuitif, kami pasti menambahkan lebih banyak RAM, jadi kami meningkatkan RAM server kami ke 8 GB. Tapi apakah itu menyelesaikan masalah? Sayangnya tidak, karena server kami masih kekurangan memori.</p><p>Jadi, kami mencari apa yang salah dan menemukan bahwa masalah utamanya adalah server kami menampilkan aplikasi web Symon dan memproses data laporan <em>instance </em>Monika di satu server secara bersamaan.</p><p>Sebagai gambaran, berikut adalah <em>flow </em>saat ini di Symon:</p><ul><li>Suatu <em>instance </em>Monika melaporkan data <em>probe</em> dengan melakukan <em>request </em>API ke Symon</li><li>Symon menerima <em>request </em>dan memprosesnya langsung</li><li>Symon mengembalikan hasil respon dari API</li><li>Jika Symon membutuhkan waktu lebih lama untuk memproses data laporan <em>probe</em>, Symon akan mengalami macet saat memproses data masuk lainnya.</li></ul><p>Ini menjadi masalah karena data laporan <em>probe</em> yang diberikan kepada Symon bisa memakan waktu lama untuk diproses mengingat ukurannya yang cukup besar. Jadi kita perlu memisahkan aplikasi web dan pemrosesan data laporan pengujian untuk mengurangi beban server. Pertanyaan besarnya adalah: <strong>bagaimana caranya?</strong></p><p>Tim kami memutuskan bahwa kami <strong>HANYA</strong> harus membuat <em>worker </em>untuk menangani data laporan <em>probe</em>, dan itu harus dipisahkan dari kode aplikasi web utama. Pada Symon API yang awalnya memproses data, kita perlu mengubahnya menjadi hanya menambahkan data ke <em>queue</em> yang sedang diproses oleh <em>worker</em>.</p><p>Teman kami <a href=\"https://medium.com/@kevin-hyperjump\">Kevin Hermawan</a> mengusulkan suatu <em>library </em>bernama <a href=\"https://optimalbits.github.io/bull/\"><strong>Bull</strong></a>, sebuah <em>library </em>berbasis NodeJS yang mengimplementasikan sistem <em>queue</em> yang cepat dan kuat menggunakan <a href=\"https://redis.io/\"><strong>Redis</strong></a>. Dengan menggunakan Bull, kita dapat membuat <em>queue</em> untuk menerima <em>job</em> dari API, menyimpan <em>job</em> di Redis dan juga membuat <em>worker </em>untuk memproses <em>job</em> dalam <em>queue</em>.</p><p>Tanpa basa-basi, kami mengeksekusi ide ini. Kami membaca bagaimana Bull dapat membatasi <em>job</em> yang diproses dalam waktu dan durasi tertentu, mengatur <em>delay</em> antara <em>job</em> yang sedang diproses dan apa yang harus dilakukan ketika suatu <em>job </em>selesai. Akhirnya, file <em>worker </em>kami telah selesai:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/e732c45326a6ec429868d9905be87176/href\">https://medium.com/media/e732c45326a6ec429868d9905be87176/href</a></iframe><p>Lalu kami membuat satu server tambahan, menginstal Redis, dan men<em>deploy</em> <em>worker </em>yang sudah dibuat sebelumnya. Setelah proses <em>deploy </em>selesai, kami mendapat log yang mengatakan bahwa <em>report queue </em>telah terhubung ke Redis. <em>So far so good.</em></p><p>Kembali ke API, kami harus memindahkan semua logika bisnis kami dari API ke dalam blok “<em>report queue job processor</em>” di file <em>worker</em>, dan kami membuat perubahan pada kodingan API kami:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/8173700749efc9a216737d35a42f1c7d/href\">https://medium.com/media/8173700749efc9a216737d35a42f1c7d/href</a></iframe><p>Jadi, API yang dulu menangani pemrosesan data yang masuk dari Monika sekarang hanya menambahkan suatu <em>job </em>ke <em>queue</em> berisikan data dari Monika, dan data yang ditambahkan ke <em>queue </em>diproses oleh <em>worker</em>.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/959/1*gb5mQ4idOSezpQoYmeIzrg.png\" /><figcaption>Worker memproses job dari queue</figcaption></figure><p>Menggunakan skema ini, kami berhasil mengurangi beban server secara signifikan. Aplikasi web Symon kami yang sebelumnya sering <em>down </em>sekarang cukup stabil dan <em>worker-</em>nya<em> </em>juga bekerja dengan lancar!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/961/1*_wpXn55rGdeFkoOcSVUNcw.png\" /><figcaption>Kondisi RAM server aplikasi web Symon</figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/959/1*DQLj-8yrB1JUPWuaSiEgNQ.png\" /><figcaption>Kondisi RAM server worker dan Redis</figcaption></figure><h3>Closing</h3><p>Kami akhirnya berhasil mengurangi beban server dengan memisahkan pemrosesan data laporan dari Monika dan server aplikasi web. Tetapi apakah ini jawaban merupakan jawaban pasti untuk masalah ini? Meskipun kami senang dengan aplikasi web yang tidak kehabisan memori, kami tetap harus optimasi terus menerus lebih baik dari sekarang. Karena di atas langit masih ada Hotman Paris. <em>Eh, </em>maksud kami masih ada langit.</p><p>Kami masih bereksperimen dengan mengoptimalkan kinerja pemrosesan data Monika, terutama ketika kami menemukan bahwa Bull memiliki pembaruan yang disebut <a href=\"https://github.com/taskforcesh/bullmq\">BullMQ</a>, versi terbaru dari Bull yang seluruhnya ditulis dalam TypeScript.</p><p>Kami juga masih mempertimbangkan solusi yang lebih baik tanpa menggunakan Redis, mungkin dengan menggunakan database SQL sederhana untuk menyimpan pekerjaan dan menggunakan <a href=\"https://github.com/breejs/bree\">Bree</a> sebagai <em>job scheduler</em>. Tapi itu hanya ide yang belum dicoba.</p><p>Jika Anda menyukai artikel ini, jangan lupa untuk memberikan <em>clap</em> dan membagikan artikel ini ke teman-teman Anda! Jangan lupa sekali lagi bahwa kami sedang mencari <em>alpha tester </em>untuk menguji Symon. Jika Anda tertarik untuk menjadi <em>alpha tester </em>setelah membaca artikel ini, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">klik di sini untuk mempelajari lebih lanjut.</a></p><p>Terima kasih telah membaca artikel ini, sampai jumpa minggu depan!</p><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://hyperjump.tech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=7ba5a833a0fa\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/memisahkan-web-app-dengan-data-processing-pada-aplikasi-berbasis-next-js-menggunakan-bull-dan-redis-7ba5a833a0fa\">Memisahkan web app dengan data processing pada aplikasi berbasis Next.js menggunakan Bull dan Redis</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Separating web app and data processing in Next.js app using Bull and Redis","link":"https://medium.com/hyperjump-tech/separating-web-app-and-data-processing-in-next-js-app-using-bull-and-redis-598d56e5d7a9?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/598d56e5d7a9","category":["symon","monitoring","javascript","message-queue","software-development"],"dc:creator":"Denny Pradipta","pubDate":"Tue, 01 Feb 2022 09:08:36 GMT","atom:updated":"2022-02-01T09:16:37.024Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*lnw33CoTw2sF4GAL\" /><figcaption>Photo by <a href=\"https://unsplash.com/@fosterious?utm_source=medium&utm_medium=referral\">Sean Foster</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>Aside from developing <a href=\"https://github.com/hyperjumptech/monika\">Monika</a>, at <a href=\"https://hyperjump.tech\">Hyperjump Tech</a> we are actively developing Symon at the moment. <a href=\"https://symon.hyperjump.tech/\">Symon</a> is a dashboard monitoring tool powered by Monika. Using Symon, you will be able to manage Monika configurations based on projects, see the hourly to monthly performance reports of each probe and check for any incidents if any. Using Symon, you can monitor probes from multiple different locations.</p><p>Currently, <strong>Symon is still in the alpha phase </strong>so we are testing it out very frequently (and you can be our<a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\"> alpha tester</a>, too). One of the things that happened for a few days while developing Symon is the frequent downtime of our Symon web page caused by our server is being out of memory.</p><p>We initially configure the Symon server using 4GBs of memory, so what’s the first thing to do when it comes to out-of-memory? Intuitively, you add more RAM. So we upgraded our server to 8GBs of memory. Does it fix the problem? Unfortunately, it doesn’t, because our server is still out-of-memory.</p><p>So we troubleshoot what went wrong, and we found out that the root cause of the problem is that Symon is serving the web app and handling the probe report data from our Monika instance in one server.</p><p>Let me paint you a picture of our current flow at Symon:</p><ul><li>Monika instance will hit Symon API with the probe report data</li><li>Symon then will process the data and save it to the database</li><li>Symon return the API response</li><li>If Symon took a longer time to process the probe report data, it will be stuck while processing another incoming data.</li></ul><p>This is an issue because the probe report data could take a long time to process because they are pretty large in terms of size. So, we need to separate the web app serving and the probe report data processing to reduce the server load. The big question is, <strong>how?</strong></p><p>Our team decided that we should build a “worker” application <strong>ONLY</strong> for processing probe report data, and it should be separated from the main web app code. On the Symon API that originally process the data, we should change it to only add the data to the queue that will be processed by the worker.</p><p>Our colleague <a href=\"https://gist.github.com/dennypradipta/2d496958ac9d20155f2f59205b8d2750\">Kevin Hermawan</a> proposed a library called <a href=\"https://optimalbits.github.io/bull/\"><strong>Bull</strong></a>, a Node library that implements a fast and robust queue system based on <a href=\"https://redis.io/\"><strong>Redis</strong></a>. By using Bull, we can create a Bull queue to accept jobs from the API, store the jobs into Redis, and also create a Bull worker to process the jobs in the queue.</p><p>So without further ado, we execute this idea. We read about how Bull can limit jobs processed in a time and its duration, set delays between jobs processed, and what to do when the job is complete. We came up with this single file for our worker:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/e732c45326a6ec429868d9905be87176/href\">https://medium.com/media/e732c45326a6ec429868d9905be87176/href</a></iframe><p>So we spin up a server, install Redis, and deploy our worker into the server. After deploying, we got a log saying that our report queue is connected to our Redis. So far so good.</p><p>Now onto our existing API. We have to move all our business logic in the API into the “report queue job processor” block in the worker file, and we made changes to our existing API to this:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/8173700749efc9a216737d35a42f1c7d/href\">https://medium.com/media/8173700749efc9a216737d35a42f1c7d/href</a></iframe><p>So basically, the API that previously process the incoming data now only adds the data into the queue. And the data that has been added to the queue will be processed by the worker.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/959/1*gb5mQ4idOSezpQoYmeIzrg.png\" /><figcaption>Worker processing jobs from the queue</figcaption></figure><p>Using this schema, we were able to reduce our loads significantly. Our Symon web app that crashes frequently now is pretty stable, and the worker is running smoothly too!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/961/1*_wpXn55rGdeFkoOcSVUNcw.png\" /><figcaption>Our web app available Memory</figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/959/1*DQLj-8yrB1JUPWuaSiEgNQ.png\" /><figcaption>Our worker available Memory</figcaption></figure><h3>Closing</h3><p>We finally managed to reduce the server load by separating the probe report data processing with the web app serving process. But is this the final answer to this problem? While we are satisfied with the web app not being out of memory, we are still not satisfied as we still can do better than this.</p><p>We are still experimenting on optimizing Symon probe report data processing performance, especially when we found out that Bull has an update called <a href=\"https://github.com/taskforcesh/bullmq\">BullMQ</a> which is the major version of Bull written entirely in Typescript.</p><p>Also, we are still considering a better solution without using Redis at all, probably by using a simple SQL database to store jobs and using <a href=\"https://github.com/breejs/bree\">Bree</a> as a job scheduler. But that’s just an untested idea though.</p><p>If you like this article, don’t forget to clap and share this article with your friends! Do not forget that <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">we’re looking for alpha testers to test Symon</a>. If you are interested in being an alpha tester after reading this article, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">click here to learn more</a>.</p><p>Thank you for reading this article, see you next week!</p><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://hyperjump.tech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=598d56e5d7a9\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/separating-web-app-and-data-processing-in-next-js-app-using-bull-and-redis-598d56e5d7a9\">Separating web app and data processing in Next.js app using Bull and Redis</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"How We Hunt Performance Issue in Monika","link":"https://medium.com/hyperjump-tech/how-we-hunt-performance-issue-in-monika-b544f90354ab?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/b544f90354ab","category":["monika","hyperjump","symon","performance","clinic"],"dc:creator":"muslim","pubDate":"Wed, 26 Jan 2022 00:10:48 GMT","atom:updated":"2022-01-26T02:03:24.301Z","content:encoded":"<p>One morning, my friends and I were having a chat about Monika. We notice that our Monika has stopped running the night before. We try to restart it a couple of times a few days earlier, but it stops running again the next day.</p><p>The first thing we wanted to know is what has caused Monika to stop. We were then scrapping out the logs and found no abnormal activities, but we notice that Monika has suddenly stopped at one moment in time. We have to check what’s happened with the surroundings also at that time.</p><p>We then try to isolate Monika by running it on an ubuntu server and monitor of its CPU and memory usage. Our tool of choice is <a href=\"https://clinicjs.org\"><strong>Clinicjs</strong></a>, an open-source tool for diagnosing and pinpointing NodeJS based apps performance issues. It also has a beautiful report screen with descriptions and suggestions, more than enough for our current needs.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/984/1*NXci3IrqPxfwwmQhHRCPuA.png\" /><figcaption>clinic js doctor’s reading from Monika performance</figcaption></figure><p>After a couple of minutes of monitoring, we found that there were multiple spikes of CPU usage, a slight increase in memory, and a significant increase in the number of active handles.</p><p>The Clinicjs gives us multiple readings on the performance of the application and server environments. First, it gives you the CPU Usage chart reading, the picture above is showing a very high percentage number. The next chart is giving you the memory usage, it shows a subtle increase in memory usage during the time we ran Monika.</p><p>The other two charts are showing the application events and active handles. The event loop delays, giving reports on how much time it takes for the recurring events. Event loop delays show a steady number of events and delays. The active handles show the number of handles running at the time. The active handles chart above shows us a significant increase in the number of processes happening at one time.</p><p>The report is also giving out warnings for a potential I/O issue. There are long-running asynchronous activities and it identifies that the problem was not in the node modules but rather in I/O operations.</p><p>Considering Monika's functions and behaviors, several I/O processes are running simultaneously. Multiple intervals are set for running probes, reporting results to Symon, and fetching any new configurations set from it.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/864/1*2swKSc79sTD_S4O8dNEHhA.png\" /><figcaption>Monika’s logs on reporting to Symon with a memory problem</figcaption></figure><p>We were then back to scrutinizing Monika's log, focusing on the I/O processes. At a glance, it shows nothing wrong but when we look closely, the debug log only registered a single entry in which Monika is reporting to Symon before running the probe. While it is also supposed to be logging the number of requests and notifications that have been reported and then deleting the items that have been reported from the local database, as shown below.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/864/1*MOM7Enfr6Afc4JXgz9yK-w.png\" /><figcaption>Monika’s logs on reporting to Symon successfully</figcaption></figure><p>From this, we know that the reporting process from Monika to Symon has not been successfully finished and the requests are still hanging without any response from Symon. This causes the buildup of memories usage on top of the existing reporting process, creating multiple processes running at one time. Over time it would use up the server memory. By this time, we were also having another issue in Symon. We found out that Symon has also been restarting itself a few times in a couple of days.</p><p>We were implementing a new library for queuing the report-saving process in Symon a few weeks before, based on Redis queueing system. It went well for a couple of weeks, but with the increase of Monika's instances connecting to Symon, the Redis has reached its initial memory state limit and stopped. This is what then could be identified as the root cause of Symon restarting itself in the last few days.</p><p>When Symon is restarting, Monika will stop running. To stop this issue from happening again, we were implementing some fixes to Monika, to pause the reporting process and probes interval when it has no connections to Symon. Monika will be checking on Symon and fetch configurations every 60 seconds. So, if Symon is suddenly stopped then restarted, Monika will try to reconnect to Symon after 60 seconds, while continuing its probing and reporting functions.</p><p>We were finally able to hunt down the performance issue in Monika using Clinic js. An excellent tool that helped us show where the issue was, after which we can analyze what processes have caused it and set rules for asserting it.</p><p>We are actively developing Monika and Symon at this moment. Come and join us as an alpha tester, follow the guide to become an alpha tester <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">here</a>.</p><p>We would like to know your feedback. If you have comments, questions, bug reports, or feature requests for Symon, don’t hesitate to send us feedback via <a href=\"https://github.com/hyperjumptech/monika/discussions/new?category=Symon\">Github Discussions</a> and Monika via <a href=\"https://github.com/hyperjumptech/monika/discussions\">Github Discussion</a>.</p><p><a href=\"https://hyperjump.tech\"><strong>Hyperjump</strong></a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\"><strong>open-source tools</strong></a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=b544f90354ab\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/how-we-hunt-performance-issue-in-monika-b544f90354ab\">How We Hunt Performance Issue in Monika</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Memburu Isu Performa pada Monika","link":"https://medium.com/hyperjump-tech/memburu-isu-performa-pada-monika-2099c17857ef?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/2099c17857ef","category":["clinic","clinicjs","monika","symon","hyperjump"],"dc:creator":"muslim","pubDate":"Wed, 26 Jan 2022 00:10:43 GMT","atom:updated":"2022-01-28T02:20:54.023Z","content:encoded":"<p>Di suatu pagi, team kami menemukan Monika telah berhenti sejak malam sebelumnya. Kami mencoba untuk menjalankannya lagi beberapa kali, namun akan selalu berhenti di hari berikutnya.</p><p>Kami mulai menyelidiki penyebabnya dan membaca log aplikasi, namun tidak menemukan ada yang salah. Yang kami temukan hanya saja aplikasinya telah berhenti secara tiba-tiba. Maka kami merasa harus melihat juga apa yang telah terjadi dengan keadaan di sekitar Monika.</p><p>Untuk melakukannya kami mulai mengisolasi lingkungan Monika dengan menjalankannya di server ubuntu. Memasang monitor untuk penggunaan <em>memori</em> dan <em>CPU</em> nya. Aplikasi yang kita gunakan untuk itu adalah <a href=\"https://clinicjs.org\"><strong>clinicjs</strong></a>, sebuah aplikasi <em>open-source</em> untuk mendiagnosa performa dan menunjukkan lokasi masalah pada aplikasi yang berbasis nodejs. Ia juga memiliki halaman laporan analisa yang cantik dengan deskripsi dan usulan untuk langkah selanjutnya. Aplikasi yang dirasa lebih dari cukup untuk menemukan masalah performa kali ini.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/984/1*NXci3IrqPxfwwmQhHRCPuA.png\" /><figcaption>hasil pengamatan clinicjs doctor terhadap Monika</figcaption></figure><p><em>Clinicjs </em>menampilkan hasil pengamatan terhadap performa aplikasi dan kondisi lingkungan dimana Monika dijalankan. Dari pengamatan selama beberapa menit, kami sudah dapat menemukan angka yang sangat tinggi terhadap penggunaan <em>CPU</em>, penggunaan memori yang pelan-pelan meningkat dan angka yang sangat signifikan terhadap jumlah <em>active handles</em>.</p><p>Pertama-tama ia menampilkan diagram penggunaan <em>CPU.</em> Pada gambar diatas terlihat jumlah pengunaan dengan persentase yang tinggi. Diagram selanjutnya menampilkan penggunaan memori dimana angkanya perlahan-lahan meningkat pada saat monika dijalankan.</p><p>Dua diagram lainnya menunjukkan jumlah <em>event loop delays </em>dan <em>active handle</em>. Diagram <em>event loop delays</em>, menampilkan lamanya jeda waktu yang di butuhkan untuk menjalankan proses berulang tersebut. Diatas terlihat jeda yang stabil antar event yang dijalankan. Diagram <em>active handles</em> menampilkan jumlah <em>handle</em> yang sedang dijalankan pada saat itu. Diagram <em>active handles</em> diatas menunjukkan adanya peningkatan yang signifikan terhadap jumlah proses yang sedang dijalankan.</p><p>Laporan di atas juga menampilkan peringatan akan masalah pada penggunaan <em>I/O. </em>Terdapat aktifitas <em>asynchronous</em> yang berjalan dalam jangka waktu yang cukup lama dan juga masalahnya bukan pada <em>node modules</em> melainkan pada operasi<em> I/O</em>.</p><p>Mengingat tugas dan fungsi yang dijalankan Monika, ada beberapa proses <em>I/O</em> yang berjalan secara bersamaan. Monika menjalankan beberapa interval untuk menjalankan <em>probes</em>, melaporkan hasil <em>response</em> probe ke Symon dan mengambil konfigurasi baru dari Symon.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/864/1*2swKSc79sTD_S4O8dNEHhA.png\" /><figcaption>Log Monika pada saat terjadi masalah</figcaption></figure><p>Kami kemudian kembali membaca log dari Monika dan fokus terhadap proses <em>I/O</em> nya. Sekilas tidak terlihat ada sesuatu yang salah, tapi kalau kita perhatikan lagi di dalam log, <em>debug</em> hanya tertulis satu kali pada saat Monika melaporkan datanya ke Symon, sebelum ia kemudian menjalankan kembali probe nya. Dimana ia seharusnya menuliskan juga jumlah <em>request</em> dan notifikasi yang telah dilaporkan, yang kemudian menghapusnya dari basis data lokal seperti yang terlihat di bawah.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/864/1*MOM7Enfr6Afc4JXgz9yK-w.png\" /><figcaption>Log Monika yang seharusnya</figcaption></figure><p>Dari kedua data di atas bisa kita ketahui bahwa proses pengiriman laporan data dari Monika ke Symon belum selesai secara sempurna dan <em>request</em> yang dikirim masih menunggu <em>response</em> dari Symon. <em>Request</em> yang belum selesai ini kemudian tertimpa oleh <em>request</em> yang baru, hal ini akan menyebabkan penumpukan jumlah penggunaan memori pada server. Pada saat yang sama juga muncul masalah pada Symon. Team kami mendapati bahwa symon telah beberapa kali mengalami <em>application restart </em>selama beberapa hari sebelumnya.</p><p>Beberapa minggu sebelumnya, kami telah menambahkan sebuah library yang menggunakan sistem antrian <em>redis</em> untuk membantu proses penyimpanan laporan pada Symon. Sistem tersebut telah berjalan dengan baik selama beberapa minggu, namun seiring bertambahnya jumlah Monika yang terhubung dengan Symon, jumlah awal memori yang dialokasikan untuk redis tidak lagi mampu menampung laporan yang terkirim dan tiba-tiba berhenti. Hal ini juga yang menyebabkan Symon mengalami <em>restart </em>beberapa hari belakangan ini.</p><p>Apabila Symon <em>restart</em>, maka Monika akan ikut mati juga. Agar tidak terjadi lagi, kami menambahkan beberapa perbaikan pada Monika. Monika akan menghentikan proses pelaporan data dan <em>interval probe</em> apabila koneksi ke Symon terputus. Dengan demikian tidak akan ada lagi proses penumpukan <em>request </em>dan memori yang akan menyebabkan Monika mati.</p><p>Monika juga memiliki interval untuk melakukan pengecekan terhadap Symon, yang akan berjalan setiap 60 detik. Jadi, apabila Symon tiba-tiba berhenti dan restart, maka Monika akan mencoba untuk menghubungkan kembali dirinya ke Symon. Setelah terhubung, Monika akan melanjutkan kembali fungsi probe dan mengirimkan laporan ke Symon.</p><p>Akhirnya kami berhasil memburu issue performa pada Monika dengan bantuan Clinic js. Sebuah pilihan yang tepat untuk membantu kami menunjukkan dimana masalahnya berada. Berbekal informasi yang diberikan kami dapat menganalisa penyebabnya dan menambahkan beberapa aturan untuk memperbaikinya.</p><p>Kami saat ini aktif mengembangkan Monika dan Symon. Mari bergabung dengan menjadi alpha tester dan ikuti cara nya <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">di sini</a>. Kami mengharapkan masukan dari anda. Apabila ada komen, saran, pertanyaan, melaporkan bug atau minta fitur baru, jangan ragu untuk mengirimkan kami <em>feedback melalui </em>Symon via <a href=\"https://github.com/hyperjumptech/monika/discussions/new?category=Symon\">Github Discussion</a> dan Monika via <a href=\"https://github.com/hyperjumptech/monika/discussions\">Github Discussion</a>.</p><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of its modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2099c17857ef\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/memburu-isu-performa-pada-monika-2099c17857ef\">Memburu Isu Performa pada Monika</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Making Themes in Next.js Project using TailwindCSS","link":"https://medium.com/hyperjump-tech/making-theme-in-next-js-project-using-tailwindcss-826f7a3eb291?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/826f7a3eb291","category":["themes","dark-mode","tailwind-css","web-development","nextjs"],"dc:creator":"Kevin Hermawan","pubDate":"Wed, 19 Jan 2022 01:02:36 GMT","atom:updated":"2022-01-19T01:12:21.462Z","content:encoded":"<p>TailwindCSS, or Tailwind, became a hot topic in front-end development. Tailwind has a unique technique that changes the way we use CSS. Tailwind uses a technique called utility-first which simply means that we only need to modify changes in HTML classes instead of creating or modifying CSS files.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xtqt4xKAcTEjKaaqQZ8jgA.png\" /><figcaption>An example of using the utility-first technique in Tailwind, source: <a href=\"https://tailwindcss.com/\">https://tailwindcss.com</a></figcaption></figure><p>Tailwind doesn’t only change the way we use CSS, it also makes it easier to build highly customizable themes and dark mode support which is the topic in this article.</p><h4>Set up Tailwind in Next.js Project</h4><p>To set up Tailwind in your Next.js project I highly recommend you to read the step-by-step configuration from the official Tailwind documentation <a href=\"https://tailwindcss.com/docs/guides/nextjs\"><em>here</em></a>.</p><p>After successfully setting up the project, replace all the code in the <strong><em>pages/index.js</em></strong> file with the code below</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/481c49979cec7ddc9ad94dba29121b24/href\">https://medium.com/media/481c49979cec7ddc9ad94dba29121b24/href</a></iframe><p>Run and open localhost:3000 in your browser, then it will look like the image below</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vJlqTrZohJnm1xXax4fsVQ.png\" /></figure><h4>Configure Theme</h4><p>We’ll implement the two colors below, the primary color used for the background color, and the label color used for the text color.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ahVAWfm8-HUkBmhEA7BOcw.png\" /></figure><p>To add these colors into Tailwind, we need to change the <strong><em>tailwind.config.js</em></strong> file as follows</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/cde2d1381f49ea6770723ee8762f348e/href\">https://medium.com/media/cde2d1381f49ea6770723ee8762f348e/href</a></iframe><p>Next, to implement the colors above, add the name of the theme that we defined above into the HTML class, here we’ll add <strong><em>bg-primary</em></strong> to the div tag class, and <strong><em>text-label</em></strong> to the h1 tag class.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/1559b83faabc84936c895ac9c7ccb377/href\">https://medium.com/media/1559b83faabc84936c895ac9c7ccb377/href</a></iframe><p>And if the result is the same as the image below, it means we have successfully implemented the theme in Tailwind, then congratulations!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ZSLIF6JBxI-zlszO_n91HQ.png\" /></figure><h4>Bonus: Implementing Dark Theme</h4><blockquote>Note: I use the macOS operating system while testing this project, which you can easily change the color mode of the OS through <strong>System Preferences > General</strong>. For other operating systems, please consult their own manuals.</blockquote><p>To implement the dark theme, we can simply change the <strong>primary</strong> and <strong>label</strong> properties in the <strong><em>tailwind.config.js</em></strong> file as follows</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/6d76a6ba57caa9efb570466f71d07571/href\">https://medium.com/media/6d76a6ba57caa9efb570466f71d07571/href</a></iframe><p>Finally, add <strong>dark:bg-primary-dark</strong> and <strong>dark:text-label-dark</strong> into the <strong><em>pages/index.js</em></strong> file as follows</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/49fb62fef59fe49a66560c26192fc73c/href\">https://medium.com/media/49fb62fef59fe49a66560c26192fc73c/href</a></iframe><p>Run and open localhost:3000 in the browser and try turning on dark mode, then it will look like the image below</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*H4aenY1htDLeCmnmqeZs6w.png\" /></figure><p>If the interface above appears in your browser, congratulations we have successfully implemented the dark theme in our Next.js project using Tailwind!</p><h3>Closing</h3><p>By using Tailwind we can easily create highly customizable and dark mode support to the website with just a few configurations.</p><p>That’s it for this article, if you like this article, don’t forget to clap and share this article with your friends!</p><p>Also, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">we’re looking for alpha testers to test Symon</a>, a dashboard monitoring tool powered by <a href=\"https://medium.com/hyperjump-tech/a-comprehensive-guide-to-use-monika-in-2022-for-website-monitoring-618737658292\">Monika</a>! If you are interested in being an alpha tester, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">click here to learn more</a>.</p><p>See you in the next article, have a nice day!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F1xucXbDnMIYkU%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fgiphy.com%2Fgifs%2Fbye-1xucXbDnMIYkU&image=https%3A%2F%2Fmedia0.giphy.com%2Fmedia%2F1xucXbDnMIYkU%2Fgiphy.gif%3Fcid%3D790b7611a3e37a5bd603013ea9d641b651f481255ae0c30f%26rid%3Dgiphy.gif%26ct%3Dg&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"259\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/813d370991ffe553f21ab33763d62586/href\">https://medium.com/media/813d370991ffe553f21ab33763d62586/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of its modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=826f7a3eb291\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/making-theme-in-next-js-project-using-tailwindcss-826f7a3eb291\">Making Themes in Next.js Project using TailwindCSS</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Membuat Tema di Proyek Next.js dengan TailwindCSS","link":"https://medium.com/hyperjump-tech/membuat-tema-di-proyek-next-js-dengan-tailwindcss-85fc85eb4957?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/85fc85eb4957","category":["web-development","tailwind-css","themes","dark-mode","nextjs"],"dc:creator":"Kevin Hermawan","pubDate":"Wed, 19 Jan 2022 01:01:19 GMT","atom:updated":"2022-01-19T01:01:19.610Z","content:encoded":"<p>TailwindCSS, atau selanjutnya kita sebut Tailwind, menjadi topik hangat dalam pengembangan front-end. Tailwind memiliki teknik unik yang mengubah cara kita menggunakan CSS. Tailwind menggunakan teknik yang disebut utility-first yang berarti bahwa kita hanya perlu memodifikasi perubahan di kelas HTML daripada membuat atau memodifikasi file CSS.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xtqt4xKAcTEjKaaqQZ8jgA.png\" /><figcaption>Contoh penerapan utility-first pada Tailwind, sumber: <a href=\"https://tailwindcss.com/\">https://tailwindcss.com</a></figcaption></figure><p>Tailwind tidak hanya mengubah cara kita menggunakan CSS, tetapi juga memudahkan untuk membangun tema yang dapat disesuaikan dan dukungan <em>dark-mode</em> yang merupakan topik dalam artikel ini.</p><h4>Setup Tailwind di Proyek Next.js</h4><ol><li>Instalasi Tailwind</li></ol><pre>npm install -D tailwindcss postcss autoprefixer<br>npx tailwindcss init -p</pre><p>2. Tambahkan <strong>“./pages/**/*.{js,ts,jsx,tsx}”</strong> dan <strong>“./components/**/*.{js,ts,jsx,tsx}” </strong>ke dalam properti <em>content</em> pada <em>file</em> <strong><em>tailwind.config.js</em></strong> seperti gambar dibawah ini</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*IBLWC_BPErfM68p2kR4QUw.png\" /></figure><p>3. Ganti seluruh isi dari file <strong><em>styles/globals.css</em></strong> dengan kode dibawah ini</p><pre><a href=\"http://twitter.com/tailwind\">@tailwind</a> base;<br><a href=\"http://twitter.com/tailwind\">@tailwind</a> components;<br><a href=\"http://twitter.com/tailwind\">@tailwind</a> utilities;</pre><p>Setelah proyek berhasil di-setup, ganti semua kode di <em>file</em> <strong><em>pages/index.js</em></strong> dengan kode di bawah ini</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/481c49979cec7ddc9ad94dba29121b24/href\">https://medium.com/media/481c49979cec7ddc9ad94dba29121b24/href</a></iframe><p>Jalankan dan buka <strong>localhost:3000</strong> di browser, maka akan terlihat seperti gambar di bawah ini</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vJlqTrZohJnm1xXax4fsVQ.png\" /></figure><h4>Konfigurasi Tema</h4><p>Kita akan menerapkan dua warna dibawah ini, <strong><em>primary</em> </strong>adalah warna yang akan digunakan untuk warna latar belakang, dan <strong><em>label</em></strong> adalah warna yang digunakan untuk warna teks.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ahVAWfm8-HUkBmhEA7BOcw.png\" /></figure><p>Untuk menambahkan warna-warna di atas ke dalam Tailwind, kita perlu mengubah file <strong><em>tailwind.config.js</em></strong> sebagai berikut:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/cde2d1381f49ea6770723ee8762f348e/href\">https://medium.com/media/cde2d1381f49ea6770723ee8762f348e/href</a></iframe><p>Selanjutnya, untuk mengimplementasikan warna di atas, tambahkan nama tema yang sudah kita definisikan di atas ke dalam kelas HTML, di sini kita akan menambahkan <strong><em>bg-primary</em></strong> ke dalam <em>class</em> di <em>tag</em> div, dan <strong><em>text-label</em></strong> ke dalam <em>class</em> di <em>tag</em> h1.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/1559b83faabc84936c895ac9c7ccb377/href\">https://medium.com/media/1559b83faabc84936c895ac9c7ccb377/href</a></iframe><p>Dan jika hasilnya sama dengan gambar di bawah ini berarti kita sudah berhasil mengimplementasikan tema di Tailwind, selamat!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ZSLIF6JBxI-zlszO_n91HQ.png\" /></figure><h4>Bonus: Implementasi Dark Theme</h4><blockquote>Catatan: Saya menggunakan sistem operasi macOS saat menguji proyek ini, di mana kita dapat dengan mudah mengubah mode warna OS melalui <strong>System Preferences > General</strong>. Untuk sistem operasi lain, silakan cari untuk cara-caranya.</blockquote><p>Untuk mengimplementasikan dark theme, kita cukup mengubah properti <strong><em>primary</em></strong> dan <strong><em>label</em></strong> pada <em>file</em> <strong><em>tailwind.config.js</em></strong> sebagai berikut:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/6d76a6ba57caa9efb570466f71d07571/href\">https://medium.com/media/6d76a6ba57caa9efb570466f71d07571/href</a></iframe><p>Terakhir, tambahkan <strong><em>dark:bg-primary-dark</em></strong> dan <strong><em>dark:text-label-dark</em></strong> ke dalam file <strong><em>pages/index.js</em></strong> sebagai berikut</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/49fb62fef59fe49a66560c26192fc73c/href\">https://medium.com/media/49fb62fef59fe49a66560c26192fc73c/href</a></iframe><p>Jalankan dan buka <strong><em>localhost:3000</em></strong> di <em>browser</em> dan coba nyalakan <em>dark mode</em>, maka akan terlihat seperti gambar di bawah ini</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*H4aenY1htDLeCmnmqeZs6w.png\" /></figure><p>Jika tampilan di atas muncul di <em>browser</em> Anda, selamat kita telah berhasil menerapkan <em>dark theme</em> di proyek Next.js menggunakan Tailwind!</p><h3>Penutup</h3><p>Dengan menggunakan Tailwind, kami dapat dengan mudah membuat dukungan mode gelap dan sangat dapat disesuaikan ke situs web hanya dengan beberapa konfigurasi kecil.</p><p>Sekian untuk artikel ini, jika suka dengan artikel ini, jangan lupa untuk clap dan bagikan artikel ini ke temanmu ya!</p><p>Oh ya, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">kami juga sedang mencari alpha tester untuk Symon</a>, sebuah dashboard monitoring tool yang didukung oleh <a href=\"https://medium.com/hyperjump-tech/a-comprehensive-guide-to-use-monika-in-2022-for-website-monitoring-618737658292\">Monika</a>! Jika tertarik menjadi alpha tester, bisa baca selengkapnya <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">disini</a>.</p><p>Sampai bertemu di artikel selanjutnya, semoga harimu menyenangkan!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F1xucXbDnMIYkU%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fgiphy.com%2Fgifs%2Fbye-1xucXbDnMIYkU&image=https%3A%2F%2Fmedia0.giphy.com%2Fmedia%2F1xucXbDnMIYkU%2Fgiphy.gif%3Fcid%3D790b7611a3e37a5bd603013ea9d641b651f481255ae0c30f%26rid%3Dgiphy.gif%26ct%3Dg&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"259\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/813d370991ffe553f21ab33763d62586/href\">https://medium.com/media/813d370991ffe553f21ab33763d62586/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of its modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=85fc85eb4957\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/membuat-tema-di-proyek-next-js-dengan-tailwindcss-85fc85eb4957\">Membuat Tema di Proyek Next.js dengan TailwindCSS</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"Integrate Monika with Telegram using Telegram Bots API","link":"https://medium.com/hyperjump-tech/integrate-monika-with-telegram-using-telegram-bots-api-f33de6d6646?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/f33de6d6646","category":["integration","monitoring","open-source","monika","telegram"],"dc:creator":"Denny Pradipta","pubDate":"Tue, 11 Jan 2022 04:28:29 GMT","atom:updated":"2022-01-12T08:10:12.607Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*pP95gCUVaHblfJEH\" /><figcaption>Photo by <a href=\"https://unsplash.com/@solomin_d?utm_source=medium&utm_medium=referral\">Dima Solomin</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>As we mentioned earlier in our <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Integrate Slack with Monika</a> article, we noted that in Indonesia, many companies use WhatsApp as their primary workplace communication application. But, some of them moved their channels to Telegram for better “separation of concerns”.</p><p>Telegram is a wonderful app. It has a larger limit for group members, multiple sessions which you can use the mobile app and the desktop app at the same time (WhatsApp can do this too, but <a href=\"https://faq.whatsapp.com/general/download-and-installation/about-multi-device-beta/\">it is still in beta</a>), unlimited server storage, and the flexibility to create bots.</p><p>In this article, we will be sharing how to integrate Monika with Telegram bots so that when there are Monika incidents or recoveries, you will be notified on your Telegram group. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F7l9zS6zuaTR3O8alVV%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F7l9zS6zuaTR3O8alVV%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2F7l9zS6zuaTR3O8alVV%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"244\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/eb968a068e75b8be5e6289f545a7bc59/href\">https://medium.com/media/eb968a068e75b8be5e6289f545a7bc59/href</a></iframe><h3>Set up the Telegram bot</h3><p>First, you need a Telegram account. Head over to <a href=\"https://web.telegram.org\">https://web.telegram.org</a> to create your account. And then, create a new private chat. Search for an account named “<strong>BotFather</strong>”. After that, do these steps below:</p><ul><li>Type<strong> /newbot </strong>and press Enter to create a new bot.</li><li><strong>You will be prompted by BotFather to name your bot</strong>. Let’s call it anything you like, such as “Monika Bot”, “Rise and Shine Bot”, or “Open your laptop now! Bot”. <strong>The more urgent it sounds, the better! </strong>Type your bot name and press Enter.</li><li>After that, <strong>you will be prompted by BotFather to enter your bot username</strong>. You may see an error because your bot username has been taken by someone else. Type your bot username and press Enter again.</li><li>If you have selected your bot username, you will receive your bot token. <strong>Save the token elsewhere </strong>as we are going to need them later.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/700/1*Tj8Yki3M74b_6UEY9fNJcg.png\" /><figcaption>Set up the bot</figcaption></figure><p>Now the next step is to create a group for the Monika notifications. Create a group in Telegram, and invite your bots into the group. Then, set your bot to be a group administrator.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jI767UEJfnefsev7JDILOQ.png\" /><figcaption>Set your bot to be a group administrator</figcaption></figure><p>Now that we have our bot API key and set our bot to be a group administrator, all we need to do is to get the group ID. Invite a new bot to the group called <strong>@RawDataBot</strong> into your group to get the group ID.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/381/1*FlZ_WX2zPPqmvpQNY9GWmA.png\" /><figcaption>Telegram Bot Raw (@RawDataBot)</figcaption></figure><p>After you have successfully invited the Telegram Bot Raw, you will see the group ID. <strong>Save the group ID to somewhere else </strong>and don’t forget to <strong>kick the Telegram Bot Raw from your group</strong>. Now that we have the group ID and bot token, it’s time to integrate it with Monika.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/409/1*kboCi3VtfmWXMBDumzoWdg.png\" /><figcaption>Group ID example</figcaption></figure><h3><strong>Integrate Telegram with Monika</strong></h3><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, Telegram, Slack, etc.</p><p>Install Monika via npm install -g @hyperjumptech/monika or if you don’t have NPM in your system, you can <a href=\"https://github.com/hyperjumptech/monika/releases\">download the prebuilt binary from our release page</a>.</p><p>Now that we have our Webhook URL, it’s time to create a configuration called monika.yml:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/e33f2d5ca4faf01fe25694bca2ebed95/href\">https://medium.com/media/e33f2d5ca4faf01fe25694bca2ebed95/href</a></iframe><p>Let me explain a little bit about this configuration:</p><ul><li>You need to set the notification channel in the notifications object. There are 3 properties: id, type, and data. Set the id to any string values, as it is just an identifier. Then, set the type to telegram to set the notification channel to Telegram. After that, put your <strong>group ID</strong> and <strong>bot token</strong> notifier webhook URL in group_id and bot_token keys in the data object.</li><li>Monika will be probing <a href=\"https://github.com/\">https://github.com</a> and will send you an alert if the response time is greater than two seconds or the response status code is not 200, meaning the website is down five times.</li></ul><p>Now that we have our configuration ready, it’s time to run it with Monika. Go to the directory where you saved the Monika configuration, and run Monika straight away using monika -c monika.yml</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/493/1*WBjJn0hXpNSJ942PpnfZig.png\" /><figcaption>Success!</figcaption></figure><p>Congratulations! Now that you have successfully integrated Monika with Telegram, you will be notified if your website is slow or down.</p><h3>Closing</h3><p>If your company is using Telegram for primary workplace communication, integrating Monika to Telegram is a good idea. You can easily add your bot into your existing groups without having to open another communication channel just to check if your website is down or slow.</p><p>If you’re having a problem with using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>Also, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">we’re looking for alpha testers to test Symon</a>, a dashboard monitoring tool powered by Monika! If you are interested in being an alpha tester, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">click here to learn more</a>.</p><p>That’s it for today, see you next time!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2Fsbze1zwpS8DB9PYHJe%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2Fsbze1zwpS8DB9PYHJe%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2Fsbze1zwpS8DB9PYHJe%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"244\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/f5aa69eb69cd303ac66b133396e915c6/href\">https://medium.com/media/f5aa69eb69cd303ac66b133396e915c6/href</a></iframe><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=f33de6d6646\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-telegram-using-telegram-bots-api-f33de6d6646\">Integrate Monika with Telegram using Telegram Bots API</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"},{"title":"A comprehensive guide to use Monika in 2022 for website monitoring","link":"https://medium.com/hyperjump-tech/a-comprehensive-guide-to-use-monika-in-2022-for-website-monitoring-618737658292?source=rss----fabfd42372dc---4","guid":"https://medium.com/p/618737658292","category":["monitoring","javascript","monika","software-development","new-year-resolution"],"dc:creator":"Denny Pradipta","pubDate":"Tue, 04 Jan 2022 15:39:33 GMT","atom:updated":"2022-01-04T15:39:32.913Z","content:encoded":"<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*mOB4jVML9IkEAgud\" /><figcaption>Photo by <a href=\"https://unsplash.com/@mokngr?utm_source=medium&utm_medium=referral\">Moritz Knöringer</a> on <a href=\"https://unsplash.com?utm_source=medium&utm_medium=referral\">Unsplash</a></figcaption></figure><p>Happy new year! 2022 has come, and when it comes to the new year, we often make a list of “new year resolutions” which aim to make ourselves better. Some people want to have a better lifestyle, learn new things, read more books, and some people want to monitor their website better than last year.</p><p>Website monitoring is necessary, especially if your business is running fully online. You don’t want to lose your customers just because they could not log in to your website.</p><p>This is a collection of our previously written articles for you to start monitoring your website using Monika. So, without further ado:</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FfSRsJdfPWnQDs62Pvw%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FfSRsJdfPWnQDs62Pvw%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FfSRsJdfPWnQDs62Pvw%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"245\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/11abce41d845fd1a90b87d334804ac4d/href\">https://medium.com/media/11abce41d845fd1a90b87d334804ac4d/href</a></iframe><h3>What is Monika?</h3><p><strong>Monika</strong> is an open-source and free synthetic monitoring command-line application. The name Monika stands for “<strong>Moni</strong>toring Ber<strong>ka</strong>la”, which means “periodic monitoring” in the Indonesian language.</p><p>With Monika, you can add as many websites as you want to monitor. You can monitor several undesirable events such as service outages or slow services. In addition, you can configure Monika to send notifications of the incidents on your services through your favorite communication tools like <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, <a href=\"https://medium.com/hyperjump-tech/get-monika-notifications-to-your-whatsapp-using-monika-whatsapp-notifier-78a83560c04c\">WhatsApp</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-microsoft-teams-get-notifications-straight-to-your-channels-using-incoming-3292147d6758\">Microsoft Teams</a>, <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Slack</a>, etc.</p><h4>Get started with Monika</h4><p>To start using Monika, you can install Monika on your computer either by downloading Monika binary file on our <a href=\"https://github.com/hyperjumptech/monika/releases\">Github Release page</a>, by using <a href=\"https://monika.hyperjump.tech\">NPM</a> or <a href=\"https://monika.hyperjump.tech/tutorial/run-in-docker\">using Docker</a>.</p><p>After you have installed Monika, you can create a Monika configuration using <a href=\"https://monika-config.hyperjump.tech\">Monika Config Generator</a> and run Monika with your created Monika configuration.</p><p>We have covered the step-by-step walkthrough in our previous article below:</p><p><a href=\"https://medium.com/hyperjump-tech/holidays-are-coming-let-monika-monitor-your-websites-for-you-8fc2badb8443\">Holidays are coming: Let Monika monitor your websites for you</a></p><h4>Supported notification channels</h4><p>Currently, we have supported <a href=\"https://monika.hyperjump.tech/guides/notifications\">over 10+ notifications channels</a>. The most popular ones are <a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">SMTP mail</a>, <a href=\"https://medium.com/hyperjump-tech/get-monika-notifications-to-your-whatsapp-using-monika-whatsapp-notifier-78a83560c04c\">WhatsApp</a> (<strong>it’s free!</strong>), <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-microsoft-teams-get-notifications-straight-to-your-channels-using-incoming-3292147d6758\">Microsoft Teams</a>, and <a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Slack</a>.</p><p>We have covered each notification channel step-by-step tutorial in our previously written articles below:</p><ul><li><a href=\"https://medium.com/hyperjump-tech/get-notified-by-e-mail-when-your-website-is-down-using-monika-a-guide-to-smtp-notification-channel-91dfcbed2bf8\">Get notified by e-mail when your website is down using Monika: A guide to SMTP notification channel</a></li><li><a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-your-slack-channels-to-receive-monika-notifications-using-incoming-webhook-9ed13e5a910e\">Integrate Monika with your Slack channels to receive Monika notifications using Incoming Webhook</a></li><li><a href=\"https://medium.com/hyperjump-tech/integrate-monika-with-microsoft-teams-get-notifications-straight-to-your-channels-using-incoming-3292147d6758\">Integrate Monika with Microsoft Teams: Get notifications straight to your channels using Incoming…</a></li><li><a href=\"https://medium.com/hyperjump-tech/get-monika-notifications-to-your-whatsapp-using-monika-whatsapp-notifier-78a83560c04c\">Get Monika notifications to your WhatsApp using Monika WhatsApp Notifier</a></li></ul><h4>Import existing data</h4><p>Monika can use your existing Postman collection to monitor your website. Even better, Monika can use an HTTP Archive (HAR) file, which you can download straight from Chrome developer tools when accessing your website.</p><p>We have explained how to do both cases in our previous articles below:</p><ul><li><a href=\"https://medium.com/hyperjump-tech/use-existing-postman-collections-with-monika-an-alternative-solution-to-postman-monitoring-770572eedb2c\">Use Existing Postman Collections with Monika: An Alternative Solution to Postman Monitoring</a></li><li><a href=\"https://medium.com/hyperjump-tech/generate-your-monika-configuration-using-http-archive-har-764944cbb9e6\">Generate your Monika Configuration using HTTP Archive (HAR)</a></li></ul><h4>Visualizing Monika data</h4><p>Some people understand better with visuals: Colors, graphs, and tables. With visuals, some people may understand the context easier than having to look at the humongous lines of logs.</p><p>You can use <a href=\"https://prometheus.io/\">Prometheus</a> and <a href=\"https://grafana.com/\">Grafana</a> to visualize your current running Monika data, starting from the current response code to the average response time. We have covered it in our two-part article:</p><ul><li><a href=\"https://medium.com/hyperjump-tech/collecting-monika-with-prometheus-9faa7d484a30\">Connecting Monika with Prometheus</a></li><li><a href=\"https://medium.com/hyperjump-tech/visualizing-monika-data-with-prometheus-and-grafana-bee8c6feb9d3\">Visualizing Monika Data with Prometheus and Grafana</a></li></ul><p>Also, we are currently developing <a href=\"https://symon.hyperjump.tech\">Symon</a>, a GUI dashboard monitoring tool powered by Monika. If you think that Grafana is troublesome, you might want to try Symon. But, bear in mind that Symon is currently in the beta phase. Check out how to become a beta tester below:</p><p><a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">Become a beta tester for Symon: A dashboard monitoring tool powered by Monika!</a></p><h4>Advanced features</h4><p>Sometimes the predefined alerts or your request configuration already hits the spot, but sometimes you want to do better such as more flexible alert queries, simulating login behavior, or maybe checking your website’s TLS certificate expiration</p><p>We have covered advanced usages in our previously written articles below:</p><ul><li><a href=\"https://medium.com/hyperjump-tech/advanced-monika-alert-queries-a-guide-to-operators-and-helpers-358095d9bc56\">Advanced Monika alert queries: A guide to operators and helpers</a></li><li><a href=\"https://medium.com/hyperjump-tech/be-alerted-when-your-authentication-api-is-slow-with-monika-a-guide-for-chaining-request-a63801df8b39\">Be alerted when your authentication API is slow with Monika: A guide for chaining request</a></li><li><a href=\"https://medium.com/hyperjump-tech/forgot-to-renew-the-tls-certificates-monika-will-remind-you-from-now-on-188407c484ba\">Forgot to renew the TLS certificates? Monika will remind you from now on</a></li></ul><h3>Closing</h3><p>New year resolutions are made to become better at something. If you want to serve your websites better, it’s best to use Monika as your website monitoring to make sure that your clients are happy with your web performances.</p><p><a href=\"https://github.com/hyperjumptech/monika\">GitHub - hyperjumptech/monika: Monika is a command line application to monitor every part of your web app using a simple YAML configuration file. Get alert not only when your site is down but also when it's slow.</a></p><p>If you have questions or find issues while using Monika, don’t hesitate to create an issue on <a href=\"https://github.com/hyperjumptech/monika/issues\">Monika’s Github Issue Page</a>. If you like this article, don’t forget to clap and share this article with your friends!</p><p>Also, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">we’re looking for beta testers to test Symon</a>, a dashboard monitoring tool powered by Monika! If you are interested in being a beta tester, <a href=\"https://medium.com/hyperjump-tech/become-a-beta-tester-for-symon-a-dashboard-monitoring-tool-powered-by-monika-6afb3716b08f\">click here to learn more</a>.</p><p>That’s it for today, see you next week!</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FxJMM9toDfnehfNxTSG%2Ftwitter%2Fiframe&display_name=Giphy&url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FxJMM9toDfnehfNxTSG%2Fgiphy.gif&image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FxJMM9toDfnehfNxTSG%2Fgiphy.gif&key=a19fcc184b9711e1b4764040d3dc5c07&type=text%2Fhtml&schema=giphy\" width=\"435\" height=\"326\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/3b19d0f3a0658e95612dd8ecf3af256a/href\">https://medium.com/media/3b19d0f3a0658e95612dd8ecf3af256a/href</a></iframe><p><a href=\"https://hyperjump.tech/\">Hyperjump</a> is an open-source-first company providing engineering excellence service. We aim to build and commercialize <a href=\"https://github.com/hyperjumptech\">open-source tools</a> to help companies streamline, simplify, and secure the most important aspects of their modern DevOps practices.</p><p><a href=\"https://github.com/hyperjumptech\">Hyperjump</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=618737658292\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://medium.com/hyperjump-tech/a-comprehensive-guide-to-use-monika-in-2022-for-website-monitoring-618737658292\">A comprehensive guide to use Monika in 2022 for website monitoring</a> was originally published in <a href=\"https://medium.com/hyperjump-tech\">Hyperjump Tech</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"}]},"__N_SSG":true}